{"ast":null,"code":"// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//   const { register, handleSubmit, watch } = useForm<VacationModel>();\n//   const navigate = useNavigate();\n//   const watchStartDate = watch(\"startDate\");\n//   const watchEndDate = watch(\"endDate\");\n\n//   async function send(vacation: VacationModel) {\n//     try {\n//       // Date validation\n//       if (\n//         watchStartDate &&\n//         watchEndDate &&\n//         new Date(watchEndDate) < new Date(watchStartDate)\n//       ) {\n//         notify.error(\"End Date cannot be before Start Date.\");\n//         return;\n//       }\n//       // Convert imageName to File (Only if needed)\n//       vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//       // Call the service to add the vacation\n//       await vacationsService.addVacation(vacation);\n//       notify.success(\"Vacation has been added.\");\n//       navigate(\"/vacations\");\n//     } catch (err: any) {\n//       notify.error(errorHandler.getError(err));\n//     }\n//   }\n\n//   return (\n//     <div className=\"addVacation\">\n//       <form onSubmit={handleSubmit(send)}>\n//         <label>Destination: </label>\n//         <input type=\"text\" {...register(\"destination\")} required />\n\n//         <label>Description: </label>\n//         <textarea rows={10} cols={38} {...register(\"description\")} required />\n\n//         <label>Start Date: </label>\n//         <input type=\"date\" {...register(\"startDate\")} required />\n\n//         <label>End Date: </label>\n//         <input type=\"date\" {...register(\"endDate\")} required />\n\n//         <label>Price: </label>\n//         <input\n//           type=\"number\"\n//           {...register(\"price\")}\n//           required\n//           placeholder=\"$$$\"\n//           min=\"0\"\n//           max=\"10000\"\n//         />\n//         <label>Image: </label>\n//         <input\n//           type=\"file\"\n//           {...register(\"imageName\")}\n//           accept=\"image/*\"\n//           required\n//         />\n\n//         <button type=\"submit\">Add Vacation</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//     const { register, handleSubmit, watch } = useForm<VacationModel>();\n//     const navigate = useNavigate();\n//     const [imagePreview, setImagePreview] = useState<string | null>(null);\n//     const watchStartDate = watch(\"startDate\");\n//     const watchEndDate = watch(\"endDate\");\n\n//     async function send(vacation: VacationModel) {\n//         try {\n//             // Date validation\n//             if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n//                 notify.error(\"End Date cannot be before Start Date.\");\n//                 return;\n//             }\n\n//             // Convert imageName to File\n//             vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//             await vacationsService.addVacation(vacation);\n//             notify.success(\"Vacation has been added.\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             notify.error(errorHandler.getError(err));\n//         }\n//     }\n\n//     function handleImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n//         const file = event.target.files?.[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onloadend = () => {\n//                 setImagePreview(reader.result as string);\n//             };\n//             reader.readAsDataURL(file);\n//         } else {\n//             setImagePreview(null);\n//         }\n//     }\n\n//     return (\n//         <div className=\"addVacation\">\n//             <form onSubmit={handleSubmit(send)}>\n//                 <label>Destination: </label>\n//                 <input type=\"text\" {...register(\"destination\")} required />\n\n//                 <label>Description: </label>\n//                 <textarea rows={10} cols={38} {...register(\"description\")} required  />\n\n//                 <label>Start Date: </label>\n//                 <input type=\"date\" {...register(\"startDate\")} required />\n\n//                 <label>End Date: </label>\n//                 <input type=\"date\" {...register(\"endDate\")} required />\n\n//                 <label>Price: </label>\n//                 <input\n//                     type=\"number\"\n//                     {...register(\"price\")}\n//                     required\n//                     placeholder=\"$$$\"\n//                     min=\"0\"\n//                     max=\"10000\"\n//                 />\n\n//                 <label>Image: </label>\n//                 <label className=\"image-upload-label\">\n//                     <input\n//                         type=\"file\"\n//                         {...register(\"imageName\", {\n//                             required: true,\n//                             onChange: handleImageChange\n//                         })}\n//                         accept=\"image/*\"\n//                         required\n//                     />\n//                     {imagePreview ? (\n//                         <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n//                     ) : (\n//                         <span>Select Image</span>\n//                     )}\n//                 </label>\n\n//                 <button type=\"submit\">Add Vacation</button>\n//             </form>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/AddVacation/AddVacation.tsx"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//   const { register, handleSubmit, watch } = useForm<VacationModel>();\n//   const navigate = useNavigate();\n//   const watchStartDate = watch(\"startDate\");\n//   const watchEndDate = watch(\"endDate\");\n\n//   async function send(vacation: VacationModel) {\n//     try {\n//       // Date validation\n//       if (\n//         watchStartDate &&\n//         watchEndDate &&\n//         new Date(watchEndDate) < new Date(watchStartDate)\n//       ) {\n//         notify.error(\"End Date cannot be before Start Date.\");\n//         return;\n//       }\n//       // Convert imageName to File (Only if needed)\n//       vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//       // Call the service to add the vacation\n//       await vacationsService.addVacation(vacation);\n//       notify.success(\"Vacation has been added.\");\n//       navigate(\"/vacations\");\n//     } catch (err: any) {\n//       notify.error(errorHandler.getError(err));\n//     }\n//   }\n\n//   return (\n//     <div className=\"addVacation\">\n//       <form onSubmit={handleSubmit(send)}>\n//         <label>Destination: </label>\n//         <input type=\"text\" {...register(\"destination\")} required />\n\n//         <label>Description: </label>\n//         <textarea rows={10} cols={38} {...register(\"description\")} required />\n\n//         <label>Start Date: </label>\n//         <input type=\"date\" {...register(\"startDate\")} required />\n\n//         <label>End Date: </label>\n//         <input type=\"date\" {...register(\"endDate\")} required />\n\n//         <label>Price: </label>\n//         <input\n//           type=\"number\"\n//           {...register(\"price\")}\n//           required\n//           placeholder=\"$$$\"\n//           min=\"0\"\n//           max=\"10000\"\n//         />\n//         <label>Image: </label>\n//         <input\n//           type=\"file\"\n//           {...register(\"imageName\")}\n//           accept=\"image/*\"\n//           required\n//         />\n\n//         <button type=\"submit\">Add Vacation</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//     const { register, handleSubmit, watch } = useForm<VacationModel>();\n//     const navigate = useNavigate();\n//     const [imagePreview, setImagePreview] = useState<string | null>(null);\n//     const watchStartDate = watch(\"startDate\");\n//     const watchEndDate = watch(\"endDate\");\n\n//     async function send(vacation: VacationModel) {\n//         try {\n//             // Date validation\n//             if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n//                 notify.error(\"End Date cannot be before Start Date.\");\n//                 return;\n//             }\n\n//             // Convert imageName to File\n//             vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//             await vacationsService.addVacation(vacation);\n//             notify.success(\"Vacation has been added.\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             notify.error(errorHandler.getError(err));\n//         }\n//     }\n\n//     function handleImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n//         const file = event.target.files?.[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onloadend = () => {\n//                 setImagePreview(reader.result as string);\n//             };\n//             reader.readAsDataURL(file);\n//         } else {\n//             setImagePreview(null);\n//         }\n//     }\n\n//     return (\n//         <div className=\"addVacation\">\n//             <form onSubmit={handleSubmit(send)}>\n//                 <label>Destination: </label>\n//                 <input type=\"text\" {...register(\"destination\")} required />\n\n//                 <label>Description: </label>\n//                 <textarea rows={10} cols={38} {...register(\"description\")} required  />\n\n//                 <label>Start Date: </label>\n//                 <input type=\"date\" {...register(\"startDate\")} required />\n\n//                 <label>End Date: </label>\n//                 <input type=\"date\" {...register(\"endDate\")} required />\n\n//                 <label>Price: </label>\n//                 <input\n//                     type=\"number\"\n//                     {...register(\"price\")}\n//                     required\n//                     placeholder=\"$$$\"\n//                     min=\"0\"\n//                     max=\"10000\"\n//                 />\n\n//                 <label>Image: </label>\n//                 <label className=\"image-upload-label\">\n//                     <input\n//                         type=\"file\"\n//                         {...register(\"imageName\", {\n//                             required: true,\n//                             onChange: handleImageChange\n//                         })}\n//                         accept=\"image/*\"\n//                         required\n//                     />\n//                     {imagePreview ? (\n//                         <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n//                     ) : (\n//                         <span>Select Image</span>\n//                     )}\n//                 </label>\n\n//                 <button type=\"submit\">Add Vacation</button>\n//             </form>\n//         </div>\n//     );\n// }\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}