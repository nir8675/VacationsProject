{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationCards\\\\VacationCards.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import \"./VacationCards.css\";\n\n// type VacationCardProps = { vacation: VacationModel; };\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     // בדיקה לוודא ש-likesCount הוא מספר ולא NaN\n//     const initialLikesCount = Number(props.vacation.likesCount) || 0;\n//     const initialIsLiked = props.vacation.isLiked === 1;\n\n//     const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//     const toggleLike = () => {\n//         if (isLiked) {\n//             setLikesCount(prev => prev - 1); // מוריד לייק\n//             setIsLiked(false); // הפוך ל-לא אהוב\n//         } else {\n//             setLikesCount(prev => prev + 1); // מוסיף לייק\n//             setIsLiked(true); // הפוך לאהוב\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n//     };\n\n//     useEffect(() => {\n//         // עדכון הערכים של likesCount ו-isLiked כאשר props מתעדכן\n//         setLikesCount(Number(props.vacation.likesCount) || 0);\n//         setIsLiked(props.vacation.isLiked === 1);\n//     }, [props.vacation.likesCount, props.vacation.isLiked]);\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={props.vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={toggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{props.vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(props.vacation.startDate)} - {formatDate(props.vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{props.vacation.description}</p>\n//                     <div className=\"price-box\">${props.vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport \"./VacationCards.css\";\n\n// Define VacationCardProps to include the vacation and the onToggleLike function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VacationCards(props) {\n  _s();\n  const {\n    vacation,\n    onToggleLike\n  } = props;\n\n  // Ensure likesCount is a number and initialize isLiked state correctly\n  const initialLikesCount = Number(vacation.likesCount) || 0;\n  const initialIsLiked = vacation.isLiked === 1;\n  const [likesCount, setLikesCount] = useState(initialLikesCount);\n  const [isLiked, setIsLiked] = useState(initialIsLiked);\n  const handleToggleLike = async () => {\n    try {\n      // Call the service to toggle the like and update the Redux store\n      const updatedVacation = await vacationsService.toggleLike(vacation.id);\n      setLikesCount(updatedVacation.likesCount);\n      setIsLiked(updatedVacation.isLiked === 1);\n      onToggleLike(vacation.id); // Call the parent function to handle like\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n    }\n  };\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString(\"he-IL\"); // Format date to DD/MM/YYYY\n  };\n  useEffect(() => {\n    // Update local state when props change\n    setLikesCount(Number(vacation.likesCount) || 0);\n    setIsLiked(vacation.isLiked === 1);\n  }, [vacation.likesCount, vacation.isLiked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: vacation.imageUrl,\n        alt: vacation.destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `like-button ${isLiked ? \"liked\" : \"\"}`,\n            onClick: handleToggleLike,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2764\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), \" \", likesCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: vacation.destination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-range\",\n          children: [formatDate(vacation.startDate), \" - \", formatDate(vacation.endDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: vacation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-box\",\n          children: [\"$\", vacation.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationCards, \"GnZPnepPcpJ8ZCq7CHtzEEgsCbI=\");\n_c = VacationCards;\nvar _c;\n$RefreshReg$(_c, \"VacationCards\");","map":{"version":3,"names":["React","useState","useEffect","vacationsService","jsxDEV","_jsxDEV","VacationCards","props","_s","vacation","onToggleLike","initialLikesCount","Number","likesCount","initialIsLiked","isLiked","setLikesCount","setIsLiked","handleToggleLike","updatedVacation","toggleLike","id","error","console","formatDate","date","Date","toLocaleDateString","className","children","src","imageUrl","alt","destination","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startDate","endDate","description","price","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationCards/VacationCards.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import \"./VacationCards.css\";\n\n// type VacationCardProps = { vacation: VacationModel; };\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     // בדיקה לוודא ש-likesCount הוא מספר ולא NaN\n//     const initialLikesCount = Number(props.vacation.likesCount) || 0;\n//     const initialIsLiked = props.vacation.isLiked === 1;\n\n//     const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//     const toggleLike = () => {\n//         if (isLiked) {\n//             setLikesCount(prev => prev - 1); // מוריד לייק\n//             setIsLiked(false); // הפוך ל-לא אהוב\n//         } else {\n//             setLikesCount(prev => prev + 1); // מוסיף לייק\n//             setIsLiked(true); // הפוך לאהוב\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n//     };\n\n//     useEffect(() => {\n//         // עדכון הערכים של likesCount ו-isLiked כאשר props מתעדכן\n//         setLikesCount(Number(props.vacation.likesCount) || 0);\n//         setIsLiked(props.vacation.isLiked === 1);\n//     }, [props.vacation.likesCount, props.vacation.isLiked]);\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={props.vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={toggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{props.vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(props.vacation.startDate)} - {formatDate(props.vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{props.vacation.description}</p>\n//                     <div className=\"price-box\">${props.vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\n\nimport \"./VacationCards.css\";\n\n// Define VacationCardProps to include the vacation and the onToggleLike function\ninterface VacationCardProps {\n  vacation: VacationModel;\n  onToggleLike: (vacationId: number) => void; // Function to handle like toggle from parent\n}\n\nexport function VacationCards(props: VacationCardProps): JSX.Element {\n  const { vacation, onToggleLike } = props;\n\n  // Ensure likesCount is a number and initialize isLiked state correctly\n  const initialLikesCount = Number(vacation.likesCount) || 0;\n  const initialIsLiked = vacation.isLiked === 1;\n\n  const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n  const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n  const handleToggleLike = async () => {\n    try {\n      // Call the service to toggle the like and update the Redux store\n      const updatedVacation = await vacationsService.toggleLike(vacation.id);\n      setLikesCount(updatedVacation.likesCount);\n      setIsLiked(updatedVacation.isLiked === 1);\n      onToggleLike(vacation.id); // Call the parent function to handle like\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n    }\n  };\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleDateString(\"he-IL\"); // Format date to DD/MM/YYYY\n  };\n\n  useEffect(() => {\n    // Update local state when props change\n    setLikesCount(Number(vacation.likesCount) || 0);\n    setIsLiked(vacation.isLiked === 1);\n  }, [vacation.likesCount, vacation.isLiked]);\n\n  return (\n    <div className=\"VacationCards\">\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={vacation.imageUrl}\n          alt={vacation.destination}\n        />\n        <div className=\"card-body\">\n          <div className=\"like-container\">\n            <button\n              className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n              onClick={handleToggleLike}\n            >\n              <span>❤️</span> {likesCount}\n            </button>\n          </div>\n          <h5 className=\"card-title\">{vacation.destination}</h5>\n          <span className=\"date-range\">\n            {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n          </span>\n          <p className=\"card-text\">{vacation.description}</p>\n          <div className=\"price-box\">${vacation.price}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}