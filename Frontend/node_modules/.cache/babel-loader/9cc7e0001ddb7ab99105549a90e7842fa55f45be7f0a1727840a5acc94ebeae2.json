{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationReport\\\\VacationReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n// file-saver for CSV download\nimport { useNavigate } from \"react-router-dom\";\nimport \"./VacationReport.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function VacationReport() {\n  _s();\n  const [reportData, setReportData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchReportData = async () => {\n      try {\n        const data = await vacationsService.getVacationLikesReport();\n        setReportData(data);\n      } catch (err) {\n        console.error(\"Failed to fetch vacation report:\", err);\n      }\n    };\n    fetchReportData();\n  }, []);\n  const chartData = {\n    labels: reportData.map(vacation => vacation.destination),\n    datasets: [{\n      label: \"Number of Likes\",\n      data: reportData.map(vacation => vacation.likesCount),\n      backgroundColor: \"rgb(13, 110, 253)\"\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Vacation Likes Report\"\n      }\n    }\n  };\n\n  //   const handleDownloadCSV = () => {\n  //     // Step 1: Create the CSV content as a string\n  //     const csvContent =\n  //       \"Destination,Likes\\n\" + // column headers.\n  //       reportData // Map through the report data.\n  //         .map((vacation) => `${vacation.destination},${vacation.likesCount}`) // Format each entry as 'destination,likesCount'.\n  //         .join(\"\\n\"); // Join each row with a new line.\n\n  //     // Step 2: Create a Blob object from the CSV string\n  //     const blob = new Blob([csvContent], {\n  //       type: \"text/csv;charset=utf-8;\",\n  //     });\n\n  //     // Step 3: Use file-saver's 'saveAs' function to trigger the download\n  //     saveAs(blob, \"vacation-likes-report.csv\");\n  //   };\n  const handleDownloadCSV = () => {\n    // Step 1: Create the CSV content with headers and report data\n    const csvContent = [[\"Destination\", \"Likes\"], ...reportData.map(item => [item.destination, item.likesCount])].map(e => e.join(\",\")) // Join each row with a comma\n    .join(\"\\n\"); // Join rows with a new line\n\n    // Step 2: Add BOM (Byte Order Mark) to ensure UTF-8 encoding with Excel\n    const bom = \"\\uFEFF\"; // BOM for UTF-8\n\n    // Step 3: Create a Blob with BOM + CSV content\n    const blob = new Blob([bom + csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n\n    // Step 4: Create an anchor element and trigger the download\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"vacations_report.csv\"; // Filename\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a); // Clean up\n    window.URL.revokeObjectURL(url); // Revoke URL after download\n  };\n  const handleBackToVacations = () => {\n    navigate(\"/vacations\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationReport\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-back\",\n      onClick: handleBackToVacations,\n      children: \"\\u25C0 Back to Vacations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-download\",\n      onClick: handleDownloadCSV,\n      children: \"Export CSV \\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vacations Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationReport, \"4IpZhggZJhOxaIMUWmPNI0VOd90=\", false, function () {\n  return [useNavigate];\n});\n_c = VacationReport;\nvar _c;\n$RefreshReg$(_c, \"VacationReport\");","map":{"version":3,"names":["React","useEffect","useState","Bar","vacationsService","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","VacationReport","_s","reportData","setReportData","navigate","fetchReportData","data","getVacationLikesReport","err","console","error","chartData","labels","map","vacation","destination","datasets","label","likesCount","backgroundColor","chartOptions","responsive","plugins","legend","display","position","title","text","handleDownloadCSV","csvContent","item","e","join","bom","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleBackToVacations","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationReport/VacationReport.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { saveAs } from \"file-saver\"; // file-saver for CSV download\nimport { useNavigate } from \"react-router-dom\";\nimport \"./VacationReport.css\";\n\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport function VacationReport(): JSX.Element {\n  const [reportData, setReportData] = useState<\n    { destination: string; likesCount: number }[]\n  >([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchReportData = async () => {\n      try {\n        const data = await vacationsService.getVacationLikesReport();\n        setReportData(data);\n      } catch (err) {\n        console.error(\"Failed to fetch vacation report:\", err);\n      }\n    };\n    fetchReportData();\n  }, []);\n\n  const chartData = {\n    labels: reportData.map((vacation) => vacation.destination),\n    datasets: [\n      {\n        label: \"Number of Likes\",\n        data: reportData.map((vacation) => vacation.likesCount),\n        backgroundColor: \"rgb(13, 110, 253)\",\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: \"Vacation Likes Report\",\n      },\n    },\n  };\n\n  //   const handleDownloadCSV = () => {\n  //     // Step 1: Create the CSV content as a string\n  //     const csvContent =\n  //       \"Destination,Likes\\n\" + // column headers.\n  //       reportData // Map through the report data.\n  //         .map((vacation) => `${vacation.destination},${vacation.likesCount}`) // Format each entry as 'destination,likesCount'.\n  //         .join(\"\\n\"); // Join each row with a new line.\n\n  //     // Step 2: Create a Blob object from the CSV string\n  //     const blob = new Blob([csvContent], {\n  //       type: \"text/csv;charset=utf-8;\",\n  //     });\n\n  //     // Step 3: Use file-saver's 'saveAs' function to trigger the download\n  //     saveAs(blob, \"vacation-likes-report.csv\");\n  //   };\n  const handleDownloadCSV = () => {\n    // Step 1: Create the CSV content with headers and report data\n    const csvContent = [\n      [\"Destination\", \"Likes\"],\n      ...reportData.map((item) => [item.destination, item.likesCount]),\n    ]\n      .map((e) => e.join(\",\")) // Join each row with a comma\n      .join(\"\\n\"); // Join rows with a new line\n\n    // Step 2: Add BOM (Byte Order Mark) to ensure UTF-8 encoding with Excel\n    const bom = \"\\uFEFF\"; // BOM for UTF-8\n\n    // Step 3: Create a Blob with BOM + CSV content\n    const blob = new Blob([bom + csvContent], {\n      type: \"text/csv;charset=utf-8;\",\n    });\n\n    // Step 4: Create an anchor element and trigger the download\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"vacations_report.csv\"; // Filename\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a); // Clean up\n    window.URL.revokeObjectURL(url); // Revoke URL after download\n  };\n\n  const handleBackToVacations = () => {\n    navigate(\"/vacations\");\n  };\n\n  return (\n    <div className=\"VacationReport\">\n      <button className=\"btn-back\" onClick={handleBackToVacations}>\n        ◀ Back to Vacations\n      </button>\n\n      <button className=\"btn-download\" onClick={handleDownloadCSV}>\n        Export CSV ▼\n      </button>\n\n      <h2>Vacations Report</h2>\n      <Bar data={chartData} options={chartOptions} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}