{"ast":null,"code":"import axios from \"axios\";\nimport { store, vacationActions } from \"../Redux/store\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass VacationsService {\n  async getAllVacations() {\n    if (store.getState().vacations) return store.getState().vacations;\n    const response = await axios.get(appConfig.vacationsUrl);\n    const vacations = response.data;\n    const action = vacationActions.initVacations(vacations);\n    store.dispatch(action);\n    return vacations;\n  }\n  async getVacationsByUserId(userId) {\n    const response = await axios.get(appConfig.vacationsUrl + userId);\n    const vacations = response.data;\n    const action = vacationActions.initVacations(vacations);\n    store.dispatch(action);\n    return vacations;\n  }\n  // ---------------- CHECK IF THIS WORKS -----------------------------\n  async addVacation(vacation) {\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const response = await axios.post(appConfig.vacationsUrl, vacation, options);\n    if (!store.getState().vacations) return;\n    const addedVacation = response.data;\n    const action = vacationActions.addVacation(addedVacation);\n    store.dispatch(action);\n  }\n  async deleteVacation(vacationId) {\n    const response = await axios.delete(appConfig.vacationsUrl + vacationId);\n    const deletedVacation = response.data;\n    const action = vacationActions.deleteVacation(deletedVacation.id);\n    store.dispatch(action);\n  }\n  // Check if this works ---------------------------------------------\n}\nexport const vacationsService = new VacationsService();","map":{"version":3,"names":["axios","store","vacationActions","appConfig","VacationsService","getAllVacations","getState","vacations","response","get","vacationsUrl","data","action","initVacations","dispatch","getVacationsByUserId","userId","addVacation","vacation","options","headers","post","addedVacation","deleteVacation","vacationId","delete","deletedVacation","id","vacationsService"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Services/VacationsService.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { VacationModel } from \"../Models/VacationModel\";\nimport { store, vacationActions } from \"../Redux/store\";\nimport { appConfig } from \"../Utils/AppConfig\";\n\nclass VacationsService {\n  public async getAllVacations() {\n    if (store.getState().vacations) return store.getState().vacations;\n\n    const response = await axios.get<VacationModel[]>(appConfig.vacationsUrl);\n    const vacations = response.data;\n    const action = vacationActions.initVacations(vacations);\n    store.dispatch(action);\n    return vacations;\n  }\n\n  public async getVacationsByUserId(userId: number) {\n    const response = await axios.get<VacationModel[]>(\n      appConfig.vacationsUrl + userId\n    );\n    const vacations = response.data;\n    const action = vacationActions.initVacations(vacations);\n    store.dispatch(action);\n    return vacations;\n  }\n  // ---------------- CHECK IF THIS WORKS -----------------------------\n  public async addVacation(vacation: VacationModel) {\n    const options: AxiosRequestConfig = {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    };\n    const response = await axios.post<VacationModel>(\n      appConfig.vacationsUrl,\n      vacation,\n      options\n    );\n    if (!store.getState().vacations) return;\n    const addedVacation = response.data;\n    const action = vacationActions.addVacation(addedVacation);\n    store.dispatch(action);\n  }\n\n  public async deleteVacation(vacationId: number) {\n    const response = await axios.delete<VacationModel>(\n      appConfig.vacationsUrl + vacationId\n    );\n    const deletedVacation = response.data;\n    const action = vacationActions.deleteVacation(deletedVacation.id);\n    store.dispatch(action);\n  }\n  // Check if this works ---------------------------------------------\n}\n\nexport const vacationsService = new VacationsService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAA8B,OAAO;AAEjD,SAASC,KAAK,EAAEC,eAAe,QAAQ,gBAAgB;AACvD,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,gBAAgB,CAAC;EACrB,MAAaC,eAAeA,CAAA,EAAG;IAC7B,IAAIJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,SAAS,EAAE,OAAON,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,SAAS;IAEjE,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAkBN,SAAS,CAACO,YAAY,CAAC;IACzE,MAAMH,SAAS,GAAGC,QAAQ,CAACG,IAAI;IAC/B,MAAMC,MAAM,GAAGV,eAAe,CAACW,aAAa,CAACN,SAAS,CAAC;IACvDN,KAAK,CAACa,QAAQ,CAACF,MAAM,CAAC;IACtB,OAAOL,SAAS;EAClB;EAEA,MAAaQ,oBAAoBA,CAACC,MAAc,EAAE;IAChD,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC9BN,SAAS,CAACO,YAAY,GAAGM,MAC3B,CAAC;IACD,MAAMT,SAAS,GAAGC,QAAQ,CAACG,IAAI;IAC/B,MAAMC,MAAM,GAAGV,eAAe,CAACW,aAAa,CAACN,SAAS,CAAC;IACvDN,KAAK,CAACa,QAAQ,CAACF,MAAM,CAAC;IACtB,OAAOL,SAAS;EAClB;EACA;EACA,MAAaU,WAAWA,CAACC,QAAuB,EAAE;IAChD,MAAMC,OAA2B,GAAG;MAClCC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC;IACD,MAAMZ,QAAQ,GAAG,MAAMR,KAAK,CAACqB,IAAI,CAC/BlB,SAAS,CAACO,YAAY,EACtBQ,QAAQ,EACRC,OACF,CAAC;IACD,IAAI,CAAClB,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,SAAS,EAAE;IACjC,MAAMe,aAAa,GAAGd,QAAQ,CAACG,IAAI;IACnC,MAAMC,MAAM,GAAGV,eAAe,CAACe,WAAW,CAACK,aAAa,CAAC;IACzDrB,KAAK,CAACa,QAAQ,CAACF,MAAM,CAAC;EACxB;EAEA,MAAaW,cAAcA,CAACC,UAAkB,EAAE;IAC9C,MAAMhB,QAAQ,GAAG,MAAMR,KAAK,CAACyB,MAAM,CACjCtB,SAAS,CAACO,YAAY,GAAGc,UAC3B,CAAC;IACD,MAAME,eAAe,GAAGlB,QAAQ,CAACG,IAAI;IACrC,MAAMC,MAAM,GAAGV,eAAe,CAACqB,cAAc,CAACG,eAAe,CAACC,EAAE,CAAC;IACjE1B,KAAK,CAACa,QAAQ,CAACF,MAAM,CAAC;EACxB;EACA;AACF;AAEA,OAAO,MAAMgB,gBAAgB,GAAG,IAAIxB,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}