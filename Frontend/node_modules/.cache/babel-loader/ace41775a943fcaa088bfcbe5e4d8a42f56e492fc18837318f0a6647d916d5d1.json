{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\AddVacation\\\\AddVacation.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { errorHandler } from \"../../../Services/errorHandler\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { notify } from \"../../../Utils/Notify\";\nimport \"./AddVacation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddVacation() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch\n  } = useForm();\n  const navigate = useNavigate();\n  const watchStartDate = watch(\"startDate\");\n  const watchEndDate = watch(\"endDate\");\n  async function send(vacation) {\n    try {\n      // Date validation\n      if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n        notify.error(\"End Date cannot be before Start Date.\");\n        return;\n      }\n\n      // Ensure imageName is not null or undefined\n      if (!vacation.imageName) {\n        notify.error(\"Image is required.\");\n        return;\n      }\n      await vacationsService.addVacation(vacation);\n      notify.success(\"Vacation has been added.\");\n      navigate(\"/vacations\");\n    } catch (err) {\n      notify.error(errorHandler.getError(err));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addVacation\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Destination: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"destination\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 10,\n        cols: 38,\n        ...register(\"description\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register(\"startDate\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register(\"endDate\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"price\"),\n        required: true,\n        placeholder: \"$$$\",\n        min: \"0\",\n        max: \"10000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ...register(\"imageName\"),\n        accept: \"image/*\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Vacation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//     const { register, handleSubmit, watch } = useForm<VacationModel>();\n//     const navigate = useNavigate();\n//     const [imagePreview, setImagePreview] = useState<string | null>(null);\n//     const watchStartDate = watch(\"startDate\");\n//     const watchEndDate = watch(\"endDate\");\n\n//     async function send(vacation: VacationModel) {\n//         try {\n//             // Date validation\n//             if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n//                 notify.error(\"End Date cannot be before Start Date.\");\n//                 return;\n//             }\n\n//             // Convert imageName to File\n//             vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//             await vacationsService.addVacation(vacation);\n//             notify.success(\"Vacation has been added.\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             notify.error(errorHandler.getError(err));\n//         }\n//     }\n\n//     function handleImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n//         const file = event.target.files?.[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onloadend = () => {\n//                 setImagePreview(reader.result as string);\n//             };\n//             reader.readAsDataURL(file);\n//         } else {\n//             setImagePreview(null);\n//         }\n//     }\n\n//     return (\n//         <div className=\"addVacation\">\n//             <form onSubmit={handleSubmit(send)}>\n//                 <label>Destination: </label>\n//                 <input type=\"text\" {...register(\"destination\")} required />\n\n//                 <label>Description: </label>\n//                 <textarea rows={10} cols={38} {...register(\"description\")} required  />\n\n//                 <label>Start Date: </label>\n//                 <input type=\"date\" {...register(\"startDate\")} required />\n\n//                 <label>End Date: </label>\n//                 <input type=\"date\" {...register(\"endDate\")} required />\n\n//                 <label>Price: </label>\n//                 <input\n//                     type=\"number\"\n//                     {...register(\"price\")}\n//                     required\n//                     placeholder=\"$$$\"\n//                     min=\"0\"\n//                     max=\"10000\"\n//                 />\n\n//                 <label>Image: </label>\n//                 <label className=\"image-upload-label\">\n//                     <input\n//                         type=\"file\"\n//                         {...register(\"imageName\", {\n//                             required: true,\n//                             onChange: handleImageChange\n//                         })}\n//                         accept=\"image/*\"\n//                         required\n//                     />\n//                     {imagePreview ? (\n//                         <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n//                     ) : (\n//                         <span>Select Image</span>\n//                     )}\n//                 </label>\n\n//                 <button type=\"submit\">Add Vacation</button>\n//             </form>\n//         </div>\n//     );\n// }\n_s(AddVacation, \"9EuPhju/yPfUdl7w+6dfcQKpypI=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = AddVacation;\nvar _c;\n$RefreshReg$(_c, \"AddVacation\");","map":{"version":3,"names":["useForm","useNavigate","errorHandler","vacationsService","notify","jsxDEV","_jsxDEV","AddVacation","_s","register","handleSubmit","watch","navigate","watchStartDate","watchEndDate","send","vacation","Date","error","imageName","addVacation","success","err","getError","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","required","rows","cols","placeholder","min","max","accept","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/AddVacation/AddVacation.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { errorHandler } from \"../../../Services/errorHandler\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { notify } from \"../../../Utils/Notify\";\nimport \"./AddVacation.css\";\n\nexport function AddVacation(): JSX.Element {\n    const { register, handleSubmit, watch } = useForm<VacationModel>();\n    const navigate = useNavigate();\n    const watchStartDate = watch(\"startDate\");\n    const watchEndDate = watch(\"endDate\");\n\n    async function send(vacation: VacationModel) {\n        try {\n            // Date validation\n            if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n                notify.error(\"End Date cannot be before Start Date.\");\n                return;\n            }\n\n            // Ensure imageName is not null or undefined\n            if (!vacation.imageName) {\n                notify.error(\"Image is required.\");\n                return;\n            }\n\n            await vacationsService.addVacation(vacation);\n            notify.success(\"Vacation has been added.\");\n            navigate(\"/vacations\");\n        } catch (err: any) {\n            notify.error(errorHandler.getError(err));\n        }\n    }\n\n    return (\n        <div className=\"addVacation\">\n            <form onSubmit={handleSubmit(send)}>\n                <label>Destination: </label>\n                <input type=\"text\" {...register(\"destination\")} required />\n\n                <label>Description: </label>\n                <textarea rows={10} cols={38} {...register(\"description\")} required />\n\n                <label>Start Date: </label>\n                <input type=\"date\" {...register(\"startDate\")} required />\n\n                <label>End Date: </label>\n                <input type=\"date\" {...register(\"endDate\")} required />\n\n                <label>Price: </label>\n                <input\n                    type=\"number\"\n                    {...register(\"price\")}\n                    required\n                    placeholder=\"$$$\"\n                    min=\"0\"\n                    max=\"10000\"\n                />\n                <label>Image: </label>\n                <input type=\"file\" {...register(\"imageName\")} accept=\"image/*\" required />\n\n                <button type=\"submit\">Add Vacation</button>\n            </form>\n        </div>\n    );\n}\n\n\n// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./AddVacation.css\";\n\n// export function AddVacation(): JSX.Element {\n//     const { register, handleSubmit, watch } = useForm<VacationModel>();\n//     const navigate = useNavigate();\n//     const [imagePreview, setImagePreview] = useState<string | null>(null);\n//     const watchStartDate = watch(\"startDate\");\n//     const watchEndDate = watch(\"endDate\");\n\n//     async function send(vacation: VacationModel) {\n//         try {\n//             // Date validation\n//             if (watchStartDate && watchEndDate && new Date(watchEndDate) < new Date(watchStartDate)) {\n//                 notify.error(\"End Date cannot be before Start Date.\");\n//                 return;\n//             }\n\n//             // Convert imageName to File\n//             vacation.imageName = (vacation.imageName as unknown as FileList)[0];\n\n//             await vacationsService.addVacation(vacation);\n//             notify.success(\"Vacation has been added.\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             notify.error(errorHandler.getError(err));\n//         }\n//     }\n\n//     function handleImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n//         const file = event.target.files?.[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onloadend = () => {\n//                 setImagePreview(reader.result as string);\n//             };\n//             reader.readAsDataURL(file);\n//         } else {\n//             setImagePreview(null);\n//         }\n//     }\n\n//     return (\n//         <div className=\"addVacation\">\n//             <form onSubmit={handleSubmit(send)}>\n//                 <label>Destination: </label>\n//                 <input type=\"text\" {...register(\"destination\")} required />\n\n//                 <label>Description: </label>\n//                 <textarea rows={10} cols={38} {...register(\"description\")} required  />\n\n//                 <label>Start Date: </label>\n//                 <input type=\"date\" {...register(\"startDate\")} required />\n\n//                 <label>End Date: </label>\n//                 <input type=\"date\" {...register(\"endDate\")} required />\n\n//                 <label>Price: </label>\n//                 <input\n//                     type=\"number\"\n//                     {...register(\"price\")}\n//                     required\n//                     placeholder=\"$$$\"\n//                     min=\"0\"\n//                     max=\"10000\"\n//                 />\n\n//                 <label>Image: </label>\n//                 <label className=\"image-upload-label\">\n//                     <input\n//                         type=\"file\"\n//                         {...register(\"imageName\", {\n//                             required: true,\n//                             onChange: handleImageChange\n//                         })}\n//                         accept=\"image/*\"\n//                         required\n//                     />\n//                     {imagePreview ? (\n//                         <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n//                     ) : (\n//                         <span>Select Image</span>\n//                     )}\n//                 </label>\n\n//                 <button type=\"submit\">Add Vacation</button>\n//             </form>\n//         </div>\n//     );\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}