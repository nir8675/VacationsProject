{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { Link } from \"react-router-dom\"; // Assuming you're using react-router for navigation\n// import \"./VacationCards.css\";\n\n// interface VacationCardProps {\n//   vacation: VacationModel;\n//   onToggleLike: () => void;\n//   isAdmin: boolean; // Add isAdmin prop to indicate if the user is an admin\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//   const { vacation, onToggleLike, isAdmin } = props;\n\n//   // Initialize likes count and like state from the vacation props\n//   const initialLikesCount = Number(vacation.likesCount) || 0;\n//   const initialIsLiked = vacation.isLiked === 1;\n\n//   const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//   const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//   // Function to handle like button click\n//   const handleToggleLike = async () => {\n//     try {\n//       const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//       setLikesCount(updatedVacation.likesCount);\n//       setIsLiked(updatedVacation.isLiked === 1);\n//       onToggleLike(); // Call external function passed as a prop\n//     } catch (error) {\n//       console.error(\"Failed to toggle like:\", error);\n//     }\n//   };\n\n//   // Function to format date to display in Israeli format\n//   const formatDate = (date: string): string => {\n//     return new Date(date).toLocaleDateString(\"he-IL\");\n//   };\n\n//   // useEffect to update state when vacation details change\n//   useEffect(() => {\n//     setLikesCount(Number(vacation.likesCount) || 0);\n//     setIsLiked(vacation.isLiked === 1);\n//   }, [vacation.likesCount, vacation.isLiked]);\n\n//   return (\n//     <div className=\"VacationCards\">\n//       <div className=\"card\">\n//         <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{vacation.destination}</h5>\n//           <span className=\"date-range\">\n//             {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//           </span>\n//           <p className=\"card-text\">{vacation.description}</p>\n//           <div className=\"price-box\">${vacation.price}</div>\n\n//           {/* Display Like/Unlike buttons only if the user is NOT an Admin */}\n//           {!isAdmin && (\n//             <div className=\"like-container\">\n//               <button\n//                 className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n//                 onClick={handleToggleLike}\n//               >\n//                 <span>❤️</span> {likesCount}\n//               </button>\n//             </div>\n//           )}\n\n//           {/* Display Edit button if the user is an Admin */}\n//           {isAdmin && (\n//             <Link\n//               to={`/edit-vacation/${vacation.id}`}\n//               className=\"btn btn-primary\"\n//             >\n//               Edit Vacation\n//             </Link>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationCards/VacationCards.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { Link } from \"react-router-dom\"; // Assuming you're using react-router for navigation\n// import \"./VacationCards.css\";\n\n// interface VacationCardProps {\n//   vacation: VacationModel;\n//   onToggleLike: () => void;\n//   isAdmin: boolean; // Add isAdmin prop to indicate if the user is an admin\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//   const { vacation, onToggleLike, isAdmin } = props;\n\n//   // Initialize likes count and like state from the vacation props\n//   const initialLikesCount = Number(vacation.likesCount) || 0;\n//   const initialIsLiked = vacation.isLiked === 1;\n\n//   const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//   const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//   // Function to handle like button click\n//   const handleToggleLike = async () => {\n//     try {\n//       const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//       setLikesCount(updatedVacation.likesCount);\n//       setIsLiked(updatedVacation.isLiked === 1);\n//       onToggleLike(); // Call external function passed as a prop\n//     } catch (error) {\n//       console.error(\"Failed to toggle like:\", error);\n//     }\n//   };\n\n//   // Function to format date to display in Israeli format\n//   const formatDate = (date: string): string => {\n//     return new Date(date).toLocaleDateString(\"he-IL\");\n//   };\n\n//   // useEffect to update state when vacation details change\n//   useEffect(() => {\n//     setLikesCount(Number(vacation.likesCount) || 0);\n//     setIsLiked(vacation.isLiked === 1);\n//   }, [vacation.likesCount, vacation.isLiked]);\n\n//   return (\n//     <div className=\"VacationCards\">\n//       <div className=\"card\">\n//         <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{vacation.destination}</h5>\n//           <span className=\"date-range\">\n//             {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//           </span>\n//           <p className=\"card-text\">{vacation.description}</p>\n//           <div className=\"price-box\">${vacation.price}</div>\n\n//           {/* Display Like/Unlike buttons only if the user is NOT an Admin */}\n//           {!isAdmin && (\n//             <div className=\"like-container\">\n//               <button\n//                 className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n//                 onClick={handleToggleLike}\n//               >\n//                 <span>❤️</span> {likesCount}\n//               </button>\n//             </div>\n//           )}\n\n//           {/* Display Edit button if the user is an Admin */}\n//           {isAdmin && (\n//             <Link\n//               to={`/edit-vacation/${vacation.id}`}\n//               className=\"btn btn-primary\"\n//             >\n//               Edit Vacation\n//             </Link>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}