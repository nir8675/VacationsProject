{"ast":null,"code":"import axios from \"axios\";\nimport { store, vacationActions } from \"../Redux/store\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass VacationsService {\n  // Fetch vacations by user ID\n  async getAllVacationsByUserId(userId) {\n    try {\n      const response = await axios.get(`${appConfig.vacationsUrl}${userId}`);\n      const vacations = response.data;\n      const action = vacationActions.initVacations(vacations);\n      store.dispatch(action);\n      return vacations;\n    } catch (error) {\n      console.error(\"Failed to fetch vacations:\", error);\n      throw error;\n    }\n  }\n\n  // Fetch vacation by ID\n  async getVacationById(id) {\n    try {\n      const response = await axios.get(\n      // `${appConfig.vacationsUrl}vacation/${id}`\n      `${appConfig.vacationsUrl}${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Failed to fetch vacation by ID:\", error);\n      throw error;\n    }\n  }\n\n  // Add a new vacation\n  async addVacation(vacation) {\n    var _store$getState$auth;\n    const token = (_store$getState$auth = store.getState().auth) === null || _store$getState$auth === void 0 ? void 0 : _store$getState$auth.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const formData = new FormData();\n    formData.append(\"destination\", vacation.destination);\n    formData.append(\"description\", vacation.description);\n    formData.append(\"startDate\", vacation.startDate);\n    formData.append(\"endDate\", vacation.endDate);\n    formData.append(\"price\", vacation.price.toString());\n    if (vacation.imageName) {\n      formData.append(\"imageName\", vacation.imageName);\n    }\n    try {\n      const response = await axios.post(appConfig.vacationsUrl, formData, options);\n      const addedVacation = response.data;\n\n      // Dispatch the added vacation to the Redux store\n      const action = vacationActions.addVacation(addedVacation);\n      store.dispatch(action);\n    } catch (error) {\n      console.error(\"Failed to add vacation:\", error);\n      throw error;\n    }\n  }\n  async editVacation(id, vacationData) {\n    try {\n      var _store$getState$auth2;\n      const token = (_store$getState$auth2 = store.getState().auth) === null || _store$getState$auth2 === void 0 ? void 0 : _store$getState$auth2.token;\n      if (!token) {\n        throw new Error(\"Unauthorized access. Please log in.\");\n      }\n      const options = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      };\n      console.log(\"Sending PUT request to:\", `${appConfig.editVacationUrl}${id}`);\n      const response = await axios.put(`${appConfig.editVacationUrl}${id}`, vacationData, options);\n      const updatedVacation = response.data;\n      const action = vacationActions.updateVacation(updatedVacation);\n      store.dispatch(action);\n      return updatedVacation;\n    } catch (error) {\n      console.error(\"Failed to update vacation:\", error);\n      throw error;\n    }\n  }\n\n  // Update an existing vacation\n  async updateVacation(id, formData) {\n    var _store$getState$auth3;\n    const token = (_store$getState$auth3 = store.getState().auth) === null || _store$getState$auth3 === void 0 ? void 0 : _store$getState$auth3.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      const response = await axios.put(`${appConfig.vacationsUrl}${id}`, formData, options);\n      const updatedVacation = response.data;\n\n      // Dispatch the updated vacation to the Redux store\n      const action = vacationActions.updateVacation(updatedVacation);\n      store.dispatch(action);\n    } catch (error) {\n      console.error(\"Failed to update vacation:\", error);\n      throw error;\n    }\n  }\n\n  // Delete a vacation\n  // public async deleteVacation(vacationId: number) {\n  //   const token = store.getState().auth?.token;\n  //   if (!token) {\n  //     throw new Error(\"Unauthorized access. Please log in.\");\n  //   }\n\n  //   try {\n  //     const response = await axios.delete<VacationModel>(\n  //       `${appConfig.vacationsUrl}${vacationId}`,\n  //       {\n  //         headers: { Authorization: `Bearer ${token}` },\n  //       }\n  //     );\n  //     const deletedVacation = response.data;\n  //     const action = vacationActions.deleteVacation(deletedVacation.id);\n  //     store.dispatch(action);\n  //   } catch (error) {\n  //     console.error(\"Failed to delete vacation:\", error);\n  //     throw error;\n  //   }\n  // }\n  async deleteVacation(vacationId) {\n    var _store$getState$auth4;\n    const token = (_store$getState$auth4 = store.getState().auth) === null || _store$getState$auth4 === void 0 ? void 0 : _store$getState$auth4.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n    try {\n      await axios.delete(`${appConfig.vacationsUrl}vacation/${vacationId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error(\"Failed to delete vacation:\", error);\n      throw error;\n    }\n  }\n  async toggleLike(vacationId) {\n    var _store$getState$auth5;\n    const token = (_store$getState$auth5 = store.getState().auth) === null || _store$getState$auth5 === void 0 ? void 0 : _store$getState$auth5.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n    try {\n      const response = await axios.patch(`${appConfig.vacationsUrl}toggle-like/${vacationId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedVacation = response.data;\n      store.dispatch(vacationActions.updateVacation(updatedVacation));\n      return updatedVacation;\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n      throw error;\n    }\n  }\n}\nexport const vacationsService = new VacationsService();","map":{"version":3,"names":["axios","store","vacationActions","appConfig","VacationsService","getAllVacationsByUserId","userId","response","get","vacationsUrl","vacations","data","action","initVacations","dispatch","error","console","getVacationById","id","addVacation","vacation","_store$getState$auth","token","getState","auth","Error","options","headers","Authorization","formData","FormData","append","destination","description","startDate","endDate","price","toString","imageName","post","addedVacation","editVacation","vacationData","_store$getState$auth2","log","editVacationUrl","put","updatedVacation","updateVacation","_store$getState$auth3","deleteVacation","vacationId","_store$getState$auth4","delete","toggleLike","_store$getState$auth5","patch","vacationsService"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Services/VacationsService.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { VacationModel } from \"../Models/VacationModel\";\nimport { store, vacationActions } from \"../Redux/store\";\nimport { appConfig } from \"../Utils/AppConfig\";\n\nclass VacationsService {\n  // Fetch vacations by user ID\n  public async getAllVacationsByUserId(userId: number) {\n    try {\n      const response = await axios.get<VacationModel[]>(\n        `${appConfig.vacationsUrl}${userId}`\n      );\n      const vacations = response.data;\n      const action = vacationActions.initVacations(vacations);\n      store.dispatch(action);\n      return vacations;\n    } catch (error) {\n      console.error(\"Failed to fetch vacations:\", error);\n      throw error;\n    }\n  }\n\n  // Fetch vacation by ID\n  public async getVacationById(id: number): Promise<VacationModel> {\n    try {\n      const response = await axios.get<VacationModel>(\n        // `${appConfig.vacationsUrl}vacation/${id}`\n        `${appConfig.vacationsUrl}${id}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Failed to fetch vacation by ID:\", error);\n      throw error;\n    }\n  }\n\n  // Add a new vacation\n  public async addVacation(vacation: VacationModel) {\n    const token = store.getState().auth?.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n\n    const options: AxiosRequestConfig = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const formData = new FormData();\n    formData.append(\"destination\", vacation.destination);\n    formData.append(\"description\", vacation.description);\n    formData.append(\"startDate\", vacation.startDate);\n    formData.append(\"endDate\", vacation.endDate);\n    formData.append(\"price\", vacation.price.toString());\n    if (vacation.imageName) {\n      formData.append(\"imageName\", vacation.imageName);\n    }\n\n    try {\n      const response = await axios.post<VacationModel>(\n        appConfig.vacationsUrl,\n        formData,\n        options\n      );\n      const addedVacation = response.data;\n\n      // Dispatch the added vacation to the Redux store\n      const action = vacationActions.addVacation(addedVacation);\n      store.dispatch(action);\n    } catch (error) {\n      console.error(\"Failed to add vacation:\", error);\n      throw error;\n    }\n  }\n  public async editVacation(\n    id: number,\n    vacationData: VacationModel\n  ): Promise<VacationModel> {\n    try {\n      const token = store.getState().auth?.token;\n      if (!token) {\n        throw new Error(\"Unauthorized access. Please log in.\");\n      }\n\n      const options: AxiosRequestConfig = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      };\n\n      console.log(\n        \"Sending PUT request to:\",\n        `${appConfig.editVacationUrl}${id}`\n      );\n      const response = await axios.put<VacationModel>(\n        `${appConfig.editVacationUrl}${id}`,\n        vacationData,\n        options\n      );\n\n      const updatedVacation = response.data;\n      const action = vacationActions.updateVacation(updatedVacation);\n      store.dispatch(action);\n\n      return updatedVacation;\n    } catch (error) {\n      console.error(\"Failed to update vacation:\", error);\n      throw error;\n    }\n  }\n\n  // Update an existing vacation\n  public async updateVacation(id: number, formData: FormData): Promise<void> {\n    const token = store.getState().auth?.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n\n    const options: AxiosRequestConfig = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      const response = await axios.put<VacationModel>(\n        `${appConfig.vacationsUrl}${id}`,\n        formData,\n        options\n      );\n      const updatedVacation = response.data;\n\n      // Dispatch the updated vacation to the Redux store\n      const action = vacationActions.updateVacation(updatedVacation);\n      store.dispatch(action);\n    } catch (error) {\n      console.error(\"Failed to update vacation:\", error);\n      throw error;\n    }\n  }\n\n  // Delete a vacation\n  // public async deleteVacation(vacationId: number) {\n  //   const token = store.getState().auth?.token;\n  //   if (!token) {\n  //     throw new Error(\"Unauthorized access. Please log in.\");\n  //   }\n\n  //   try {\n  //     const response = await axios.delete<VacationModel>(\n  //       `${appConfig.vacationsUrl}${vacationId}`,\n  //       {\n  //         headers: { Authorization: `Bearer ${token}` },\n  //       }\n  //     );\n  //     const deletedVacation = response.data;\n  //     const action = vacationActions.deleteVacation(deletedVacation.id);\n  //     store.dispatch(action);\n  //   } catch (error) {\n  //     console.error(\"Failed to delete vacation:\", error);\n  //     throw error;\n  //   }\n  // }\n  public async deleteVacation(vacationId: number): Promise<void> {\n    const token = store.getState().auth?.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n\n    try {\n      await axios.delete(`${appConfig.vacationsUrl}vacation/${vacationId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n    } catch (error) {\n      console.error(\"Failed to delete vacation:\", error);\n      throw error;\n    }\n  }\n\n  public async toggleLike(vacationId: number) {\n    const token = store.getState().auth?.token;\n    if (!token) {\n      throw new Error(\"Unauthorized access. Please log in.\");\n    }\n\n    try {\n      const response = await axios.patch<VacationModel>(\n        `${appConfig.vacationsUrl}toggle-like/${vacationId}`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      const updatedVacation = response.data;\n      store.dispatch(vacationActions.updateVacation(updatedVacation));\n      return updatedVacation;\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n      throw error;\n    }\n  }\n}\n\nexport const vacationsService = new VacationsService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}