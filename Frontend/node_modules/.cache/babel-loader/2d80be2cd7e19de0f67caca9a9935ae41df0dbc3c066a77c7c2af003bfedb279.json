{"ast":null,"code":"// import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n// import { UserModel } from \"../Models/UserModel\";\n// import { VacationModel } from \"../Models/VacationModel\";\n// import {\n//   addVacation,\n//   deleteVacation,\n//   updateVacation,\n//   initUser,\n//   initVacations,\n//   logoutUser,\n// } from \"./reducers\";\n\n// // Application state:\n// export type AppState = {\n//   vacations: VacationModel[];\n//   user: UserModel;\n//   auth: { token: string };\n// };\n\n// // Creating Vacations slice:\n// const vacationSlice = createSlice({\n//   name: \"vacations\", // Internal use\n//   initialState: [] as VacationModel[],\n//   reducers: { initVacations, addVacation, deleteVacation, updateVacation },\n// });\n\n// // Create user slice:\n// const userSlice = createSlice({\n//   name: \"user\",\n//   initialState: null as UserModel | null,\n//   reducers: { initUser, logoutUser },\n// });\n\n// // Create auth slice:\n// const authSlice = createSlice({\n//   name: \"auth\",\n//   initialState: {\n//     token: localStorage.getItem(\"token\") || null,\n//   },\n//   reducers: {\n//     login(state, action: PayloadAction<string>) {\n//       state.token = action.payload;\n//       localStorage.setItem(\"token\", action.payload); // Save token in localStorage\n//     },\n//     logout(state) {\n//       state.token = null;\n//       localStorage.removeItem(\"token\"); // Remove token from localStorage\n//     },\n//   },\n// });\n\n// // Export action creators:\n// export const vacationActions = vacationSlice.actions;\n// export const userActions = userSlice.actions;\n// export const authActions = authSlice.actions;\n\n// // Main redux object:\n// export const store = configureStore({\n//   reducer: {\n//     vacations: vacationSlice.reducer, // Vacation state.\n//     user: userSlice.reducer, // User state\n//     auth: authSlice.reducer, // Auth state\n//   },\n// });\n\n// src/Redux/store.ts\n\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\n// Application state:\n\n// Creating Vacations slice:\nconst vacationSlice = createSlice({\n  name: \"vacations\",\n  // Internal use\n  initialState: [],\n  reducers: {\n    initVacations: (state, action) => action.payload,\n    addVacation: (state, action) => [...state, action.payload],\n    deleteVacation: (state, action) => state.filter(v => v.id !== action.payload),\n    updateVacation: (state, action) => state.map(v => v.id === action.payload.id ? action.payload : v)\n  }\n});\n\n// Create user slice:\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    initUser: (state, action) => action.payload,\n    logoutUser: () => null\n  }\n});\n\n// Create auth slice:\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: localStorage.getItem(\"token\"),\n    loading: false\n  },\n  reducers: {\n    loginStart(state) {\n      state.loading = true;\n    },\n    loginSuccess(state, action) {\n      state.token = action.payload;\n      localStorage.setItem(\"token\", action.payload);\n      state.loading = false;\n    },\n    loginFailure(state) {\n      state.loading = false;\n    },\n    logout(state) {\n      state.token = null;\n      localStorage.removeItem(\"token\");\n      state.loading = false;\n    }\n  }\n});\n\n// Export action creators:\nexport const vacationActions = vacationSlice.actions;\nexport const userActions = userSlice.actions;\nexport const authActions = authSlice.actions;\n\n// Main redux object:\nexport const store = configureStore({\n  reducer: {\n    vacations: vacationSlice.reducer,\n    // Vacation state.\n    user: userSlice.reducer,\n    // User state\n    auth: authSlice.reducer // Auth state\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","vacationSlice","name","initialState","reducers","initVacations","state","action","payload","addVacation","deleteVacation","filter","v","id","updateVacation","map","userSlice","initUser","logoutUser","authSlice","token","localStorage","getItem","loading","loginStart","loginSuccess","setItem","loginFailure","logout","removeItem","vacationActions","actions","userActions","authActions","store","reducer","vacations","user","auth"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Redux/store.ts"],"sourcesContent":["// import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n// import { UserModel } from \"../Models/UserModel\";\r\n// import { VacationModel } from \"../Models/VacationModel\";\r\n// import {\r\n//   addVacation,\r\n//   deleteVacation,\r\n//   updateVacation,\r\n//   initUser,\r\n//   initVacations,\r\n//   logoutUser,\r\n// } from \"./reducers\";\r\n\r\n// // Application state:\r\n// export type AppState = {\r\n//   vacations: VacationModel[];\r\n//   user: UserModel;\r\n//   auth: { token: string };\r\n// };\r\n\r\n// // Creating Vacations slice:\r\n// const vacationSlice = createSlice({\r\n//   name: \"vacations\", // Internal use\r\n//   initialState: [] as VacationModel[],\r\n//   reducers: { initVacations, addVacation, deleteVacation, updateVacation },\r\n// });\r\n\r\n// // Create user slice:\r\n// const userSlice = createSlice({\r\n//   name: \"user\",\r\n//   initialState: null as UserModel | null,\r\n//   reducers: { initUser, logoutUser },\r\n// });\r\n\r\n// // Create auth slice:\r\n// const authSlice = createSlice({\r\n//   name: \"auth\",\r\n//   initialState: {\r\n//     token: localStorage.getItem(\"token\") || null,\r\n//   },\r\n//   reducers: {\r\n//     login(state, action: PayloadAction<string>) {\r\n//       state.token = action.payload;\r\n//       localStorage.setItem(\"token\", action.payload); // Save token in localStorage\r\n//     },\r\n//     logout(state) {\r\n//       state.token = null;\r\n//       localStorage.removeItem(\"token\"); // Remove token from localStorage\r\n//     },\r\n//   },\r\n// });\r\n\r\n// // Export action creators:\r\n// export const vacationActions = vacationSlice.actions;\r\n// export const userActions = userSlice.actions;\r\n// export const authActions = authSlice.actions;\r\n\r\n// // Main redux object:\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     vacations: vacationSlice.reducer, // Vacation state.\r\n//     user: userSlice.reducer, // User state\r\n//     auth: authSlice.reducer, // Auth state\r\n//   },\r\n// });\r\n\r\n\r\n// src/Redux/store.ts\r\n\r\nimport { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { UserModel } from \"../Models/UserModel\";\r\nimport { VacationModel } from \"../Models/VacationModel\";\r\n\r\n// Application state:\r\nexport type AppState = {\r\n  vacations: VacationModel[];\r\n  user: UserModel | null;\r\n  auth: { token: string | null; loading: boolean };\r\n};\r\n\r\n// Creating Vacations slice:\r\nconst vacationSlice = createSlice({\r\n  name: \"vacations\", // Internal use\r\n  initialState: [] as VacationModel[],\r\n  reducers: {\r\n    initVacations: (state, action: PayloadAction<VacationModel[]>) => action.payload,\r\n    addVacation: (state, action: PayloadAction<VacationModel>) => [...state, action.payload],\r\n    deleteVacation: (state, action: PayloadAction<number>) => state.filter(v => v.id !== action.payload),\r\n    updateVacation: (state, action: PayloadAction<VacationModel>) => state.map(v => v.id === action.payload.id ? action.payload : v),\r\n  },\r\n});\r\n\r\n// Create user slice:\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: null as UserModel | null,\r\n  reducers: {\r\n    initUser: (state, action: PayloadAction<UserModel>) => action.payload,\r\n    logoutUser: () => null,\r\n  },\r\n});\r\n\r\n// Create auth slice:\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: false,\r\n  },\r\n  reducers: {\r\n    loginStart(state) {\r\n      state.loading = true;\r\n    },\r\n    loginSuccess(state, action: PayloadAction<string>) {\r\n      state.token = action.payload;\r\n      localStorage.setItem(\"token\", action.payload);\r\n      state.loading = false;\r\n    },\r\n    loginFailure(state) {\r\n      state.loading = false;\r\n    },\r\n    logout(state) {\r\n      state.token = null;\r\n      localStorage.removeItem(\"token\");\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Export action creators:\r\nexport const vacationActions = vacationSlice.actions;\r\nexport const userActions = userSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\n// Main redux object:\r\nexport const store = configureStore({\r\n  reducer: {\r\n    vacations: vacationSlice.reducer, // Vacation state.\r\n    user: userSlice.reducer, // User state\r\n    auth: authSlice.reducer, // Auth state\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}