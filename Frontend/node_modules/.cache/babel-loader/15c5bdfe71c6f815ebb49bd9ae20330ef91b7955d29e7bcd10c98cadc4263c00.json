{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationList\\\\VacationList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationActions } from \"../../../Redux/store\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { VacationCards } from \"../VacationCards/VacationCards\";\n// import \"./VacationList.css\";\n// import axios from \"axios\";\n\n// export function VacationList(): JSX.Element {\n//     const [vacations, setVacations] = useState<VacationModel[]>([]);\n//     const [currentPage, setCurrentPage] = useState<number>(1);\n//     const [itemsPerPage] = useState<number>(9);\n//     const dispatch = useDispatch();\n\n//     // Set token in the header for all axios requests\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\"); // Get the token from local storage\n//         if (token) {\n//             axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in the headers\n//         }\n\n//         // Fetch vacations only if the token exists\n//         if (token) {\n//             vacationsService.getAllVacations()\n//                 .then(vacations => {\n//                     setVacations(vacations);\n//                     const action = vacationActions.initVacations(vacations);\n//                     dispatch(action);\n//                 })\n//                 .catch(err => alert(err.message));\n//         } else {\n//             alert(\"You are not logged in.\"); // Notify the user that they are not logged in\n//         }\n//     }, [dispatch]);\n\n//     const indexOfLastItem = currentPage * itemsPerPage;\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//     const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n//     const nextPage = () => {\n//         if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     const prevPage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     return (\n//         <div className=\"VacationList\">\n//             <div className=\"vacation-cards-container\">\n//                 {currentVacations.map(vacation => (\n//                     <VacationCards\n//                         key={vacation.id}\n//                         vacation={vacation}\n//                         onToggleLike={() => { }}\n//                     />\n//                 ))}\n//             </div>\n\n//             <div className=\"pagination\">\n//                 <button onClick={prevPage} disabled={currentPage === 1}>Previous</button>\n//                 <span>Page {currentPage}</span>\n//                 <button onClick={nextPage} disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport \"./VacationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VacationList() {\n  _s();\n  const [vacations, setVacations] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(9);\n  const dispatch = useDispatch();\n\n  // Retrieve the token from Redux state\n  const token = useSelector(state => state.auth.token);\n  const userId = useSelector(state => state.user.id);\n  useEffect(() => {\n    // If no token is found, navigate to the login page\n    if (!token) {\n      Navigate({\n        to: \"/login\"\n      });\n      // Redirect to the login page\n\n      return;\n    }\n    vacationsService.getAllVacationsByUserId(userId).then(vacations => {\n      if (vacations.length > 0) {\n        setVacations(vacations);\n        const action = vacationActions.initVacations(vacations);\n        dispatch(action);\n      } else {\n        console.warn(\"No vacations were fetched from the API.\");\n      }\n    }).catch(err => {\n      alert(err.message);\n    });\n  }, [token, dispatch]);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacation-cards-container\",\n      children: currentVacations.length > 0 ? currentVacations.map(vacation => /*#__PURE__*/_jsxDEV(VacationCards, {\n        vacation: vacation,\n        onToggleLike: () => {}\n      }, vacation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No vacations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(vacations.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationList, \"RPUbAoWD8FRVXPx6L/drhlfEmKY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = VacationList;\nvar _c;\n$RefreshReg$(_c, \"VacationList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","vacationActions","vacationsService","VacationCards","jsxDEV","_jsxDEV","VacationList","_s","vacations","setVacations","currentPage","setCurrentPage","itemsPerPage","dispatch","token","state","auth","userId","user","id","Navigate","to","getAllVacationsByUserId","then","length","action","initVacations","console","warn","catch","err","alert","message","indexOfLastItem","indexOfFirstItem","currentVacations","slice","nextPage","Math","ceil","prevPage","className","children","map","vacation","onToggleLike","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationList/VacationList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationActions } from \"../../../Redux/store\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { VacationCards } from \"../VacationCards/VacationCards\";\n// import \"./VacationList.css\";\n// import axios from \"axios\";\n\n// export function VacationList(): JSX.Element {\n//     const [vacations, setVacations] = useState<VacationModel[]>([]);\n//     const [currentPage, setCurrentPage] = useState<number>(1);\n//     const [itemsPerPage] = useState<number>(9);\n//     const dispatch = useDispatch();\n\n//     // Set token in the header for all axios requests\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\"); // Get the token from local storage\n//         if (token) {\n//             axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in the headers\n//         }\n\n//         // Fetch vacations only if the token exists\n//         if (token) {\n//             vacationsService.getAllVacations()\n//                 .then(vacations => {\n//                     setVacations(vacations);\n//                     const action = vacationActions.initVacations(vacations);\n//                     dispatch(action);\n//                 })\n//                 .catch(err => alert(err.message));\n//         } else {\n//             alert(\"You are not logged in.\"); // Notify the user that they are not logged in\n//         }\n//     }, [dispatch]);\n\n//     const indexOfLastItem = currentPage * itemsPerPage;\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//     const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n//     const nextPage = () => {\n//         if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     const prevPage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     return (\n//         <div className=\"VacationList\">\n//             <div className=\"vacation-cards-container\">\n//                 {currentVacations.map(vacation => (\n//                     <VacationCards\n//                         key={vacation.id}\n//                         vacation={vacation}\n//                         onToggleLike={() => { }}\n//                     />\n//                 ))}\n//             </div>\n\n//             <div className=\"pagination\">\n//                 <button onClick={prevPage} disabled={currentPage === 1}>Previous</button>\n//                 <span>Page {currentPage}</span>\n//                 <button onClick={nextPage} disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../Redux/store\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport \"./VacationList.css\";\nimport { use } from \"react-router-dom\";\n\nexport function VacationList(): JSX.Element {\n  const [vacations, setVacations] = useState<VacationModel[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage] = useState<number>(9);\n  const dispatch = useDispatch();\n\n  // Retrieve the token from Redux state\n  const token = useSelector((state: AppState) => state.auth.token);\n\n  const userId = useSelector<AppState, number>((state) => state.user.id);\n  useEffect(() => {\n    // If no token is found, navigate to the login page\n    if (!token) {\n      Navigate({ to: \"/login\" });\n      // Redirect to the login page\n\n      return;\n    }\n\n    vacationsService\n      .getAllVacationsByUserId(userId)\n      .then((vacations) => {\n        if (vacations.length > 0) {\n          setVacations(vacations);\n          const action = vacationActions.initVacations(vacations);\n          dispatch(action);\n        } else {\n          console.warn(\"No vacations were fetched from the API.\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }, [token, dispatch]);\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div className=\"VacationList\">\n      <div className=\"vacation-cards-container\">\n        {currentVacations.length > 0 ? (\n          currentVacations.map((vacation) => (\n            <VacationCards\n              key={vacation.id}\n              vacation={vacation}\n              onToggleLike={() => {}}\n            />\n          ))\n        ) : (\n          <p>No vacations available</p>\n        )}\n      </div>\n\n      <div className=\"pagination\">\n        <button onClick={prevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span>Page {currentPage}</span>\n        <button\n          onClick={nextPage}\n          disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}