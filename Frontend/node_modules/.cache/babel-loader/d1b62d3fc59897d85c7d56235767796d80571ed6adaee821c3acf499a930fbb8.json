{"ast":null,"code":"// npm i react-redux @types/react-redux @reduxjs/toolkit\n\n// Init all Vacations\nexport function initVacations(currentState, action) {\n  const newState = action.payload; // Here, action.payload is all Vacations to init.\n  return newState;\n}\n\n// Add Vacation:\nexport function addVacation(currentState, action) {\n  const newState = [...currentState];\n  newState.push(action.payload); // Here, action.payload is a Vacation to add.\n  return newState;\n}\n// Delete Vacation: -----------------------------------------\nexport function deleteVacation(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(v => v.id === action.payload);\n  if (index !== -1) {\n    newState.splice(index, 1);\n  }\n  return newState;\n}\nexport function initUser(currentState, action) {\n  const newState = action.payload;\n  return newState;\n}\nexport function logoutUser(currentState, action) {\n  const newState = null;\n  return newState;\n}","map":{"version":3,"names":["initVacations","currentState","action","newState","payload","addVacation","push","deleteVacation","index","findIndex","v","id","splice","initUser","logoutUser"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Redux/reducers.ts"],"sourcesContent":["import { Action, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { UserModel } from \"../Models/UserModel\";\r\nimport { VacationModel } from \"../Models/VacationModel\";\r\n\r\n// npm i react-redux @types/react-redux @reduxjs/toolkit\r\n\r\n// Init all Vacations\r\nexport function initVacations(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<VacationModel[]>\r\n) {\r\n  const newState: VacationModel[] = action.payload; // Here, action.payload is all Vacations to init.\r\n  return newState;\r\n}\r\n\r\n// Add Vacation:\r\nexport function addVacation(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<VacationModel>\r\n) {\r\n  const newState: VacationModel[] = [...currentState];\r\n  newState.push(action.payload); // Here, action.payload is a Vacation to add.\r\n  return newState;\r\n}\r\n// Delete Vacation: -----------------------------------------\r\nexport function deleteVacation(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<number>\r\n) {\r\n  const newState: VacationModel[] = [...currentState];\r\n  const index = newState.findIndex((v) => v.id === action.payload);\r\n  if (index !== -1) {\r\n    newState.splice(index, 1);\r\n  }\r\n  return newState;\r\n}\r\n\r\nexport function initUser(\r\n  currentState: UserModel,\r\n  action: PayloadAction<UserModel>\r\n) {\r\n  const newState: UserModel = action.payload;\r\n  return newState;\r\n}\r\n\r\nexport function logoutUser(currentState: UserModel, action: Action) {\r\n  const newState: UserModel = null;\r\n  return newState;\r\n}\r\n"],"mappings":"AAIA;;AAEA;AACA,OAAO,SAASA,aAAaA,CAC3BC,YAA6B,EAC7BC,MAAsC,EACtC;EACA,MAAMC,QAAyB,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;EAClD,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASE,WAAWA,CACzBJ,YAA6B,EAC7BC,MAAoC,EACpC;EACA,MAAMC,QAAyB,GAAG,CAAC,GAAGF,YAAY,CAAC;EACnDE,QAAQ,CAACG,IAAI,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;EAC/B,OAAOD,QAAQ;AACjB;AACA;AACA,OAAO,SAASI,cAAcA,CAC5BN,YAA6B,EAC7BC,MAA6B,EAC7B;EACA,MAAMC,QAAyB,GAAG,CAAC,GAAGF,YAAY,CAAC;EACnD,MAAMO,KAAK,GAAGL,QAAQ,CAACM,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,MAAM,CAACE,OAAO,CAAC;EAChE,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBL,QAAQ,CAACS,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;EAC3B;EACA,OAAOL,QAAQ;AACjB;AAEA,OAAO,SAASU,QAAQA,CACtBZ,YAAuB,EACvBC,MAAgC,EAChC;EACA,MAAMC,QAAmB,GAAGD,MAAM,CAACE,OAAO;EAC1C,OAAOD,QAAQ;AACjB;AAEA,OAAO,SAASW,UAAUA,CAACb,YAAuB,EAAEC,MAAc,EAAE;EAClE,MAAMC,QAAmB,GAAG,IAAI;EAChC,OAAOA,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}