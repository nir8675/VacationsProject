{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\UserArea\\\\Login\\\\Login.tsx\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\";\n// import { NavLink, useNavigate } from \"react-router-dom\";\n// import { CredentialsModel } from \"../../../Models/CredentialsModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { userService } from \"../../../Services/UserService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./Login.css\";\n\n// export function Login(): JSX.Element {\n\n//     const { register, handleSubmit } = useForm<CredentialsModel>();\n//     const navigate = useNavigate();\n\n//     async function send(credentials: CredentialsModel) {\n//         try {\n//             await userService.login(credentials);\n//             notify.success(\"Welcome back!\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             const errorMessage = errorHandler.getError(err);\n//             notify.error(errorMessage);\n//         }\n//     }\n//     return (\n//         <div className=\"login-container\">\n//             <form className=\"login-form\" onSubmit={handleSubmit(send)}>\n//                 <h2>Login</h2>\n//                 <div>\n//                     <label>Email</label>\n//                     <input type=\"email\" id=\"email\" {...register(\"email\")} />\n//                 </div>\n//                 <div>\n//                     <label>Password</label>\n//                     <input type=\"password\" id=\"password\" {...register(\"password\")} />\n//                 </div>\n//                 <button>Login</button>\n//                 <div className=\"register-area\">\n//                     <span>Don't have an account? </span>\n//                     <NavLink to=\"/register\">Register</NavLink>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// }\n\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { errorHandler } from \"../../../Services/errorHandler\";\nimport { userService } from \"../../../Services/UserService\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { notify } from \"../../../Utils/Notify\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  async function send(credentials) {\n    try {\n      await userService.login(credentials);\n      await vacationsService.getAllVacations(); // Ensure vacations are fetched\n      notify.success(\"Welcome back!\");\n      navigate(\"/vacations\");\n    } catch (err) {\n      const errorMessage = errorHandler.getError(err);\n      notify.error(errorMessage);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ...register(\"email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ...register(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Don't have an account? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"NBNaF86L+s24OCdlX7l2VwDp8PU=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","NavLink","useNavigate","errorHandler","userService","vacationsService","notify","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","navigate","send","credentials","login","getAllVacations","success","err","errorMessage","getError","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","id","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/UserArea/Login/Login.tsx"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\n// import { NavLink, useNavigate } from \"react-router-dom\";\n// import { CredentialsModel } from \"../../../Models/CredentialsModel\";\n// import { errorHandler } from \"../../../Services/errorHandler\";\n// import { userService } from \"../../../Services/UserService\";\n// import { notify } from \"../../../Utils/Notify\";\n// import \"./Login.css\";\n\n// export function Login(): JSX.Element {\n\n//     const { register, handleSubmit } = useForm<CredentialsModel>();\n//     const navigate = useNavigate();\n\n//     async function send(credentials: CredentialsModel) {\n//         try {\n//             await userService.login(credentials);\n//             notify.success(\"Welcome back!\");\n//             navigate(\"/vacations\");\n//         }\n//         catch (err: any) {\n//             const errorMessage = errorHandler.getError(err);\n//             notify.error(errorMessage);\n//         }\n//     }\n//     return (\n//         <div className=\"login-container\">\n//             <form className=\"login-form\" onSubmit={handleSubmit(send)}>\n//                 <h2>Login</h2>\n//                 <div>\n//                     <label>Email</label>\n//                     <input type=\"email\" id=\"email\" {...register(\"email\")} />\n//                 </div>\n//                 <div>\n//                     <label>Password</label>\n//                     <input type=\"password\" id=\"password\" {...register(\"password\")} />\n//                 </div>\n//                 <button>Login</button>\n//                 <div className=\"register-area\">\n//                     <span>Don't have an account? </span>\n//                     <NavLink to=\"/register\">Register</NavLink>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// }\n\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { CredentialsModel } from \"../../../Models/CredentialsModel\";\nimport { errorHandler } from \"../../../Services/errorHandler\";\nimport { userService } from \"../../../Services/UserService\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { notify } from \"../../../Utils/Notify\";\nimport \"./Login.css\";\n\nexport function Login(): JSX.Element {\n  const { register, handleSubmit } = useForm<CredentialsModel>();\n  const navigate = useNavigate();\n\n  async function send(credentials: CredentialsModel) {\n    try {\n      await userService.login(credentials);\n      await vacationsService.getAllVacations(); // Ensure vacations are fetched\n      notify.success(\"Welcome back!\");\n      navigate(\"/vacations\");\n    } catch (err: any) {\n      const errorMessage = errorHandler.getError(err);\n      notify.error(errorMessage);\n    }\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleSubmit(send)}>\n        <h2>Login</h2>\n        <div>\n          <label>Email</label>\n          <input type=\"email\" id=\"email\" {...register(\"email\")} />\n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" id=\"password\" {...register(\"password\")} />\n        </div>\n        <button>Login</button>\n        <div className=\"register-area\">\n          <span>Don't have an account? </span>\n          <NavLink to=\"/register\">Register</NavLink>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}