{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationCards\\\\VacationCards.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import \"./VacationCards.css\";\n\n// type VacationCardProps = { vacation: VacationModel; };\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     const [likesCount, setLikesCount] = useState<number>(props.vacation.likesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(props.vacation.isLiked === 1);\n\n//     const toggleLike = () => {\n//         if (isLiked) {\n//             setLikesCount(likesCount - 1); // מוריד לייק\n//             setIsLiked(false); // הפוך ל-לא אהוב\n//         } else {\n//             setLikesCount(likesCount + 1); // מוסיף לייק\n//             setIsLiked(true); // הפוך לאהוב\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n//     };\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={props.vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={toggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{props.vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(props.vacation.startDate)} - {formatDate(props.vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{props.vacation.description}</p>\n//                     <div className=\"price-box\">${props.vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./VacationCards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VacationCards(props) {\n  _s();\n  // בדיקה לוודא ש-likesCount הוא מספר ולא NaN\n  const initialLikesCount = Number(props.vacation.likesCount) || 0;\n  const initialIsLiked = props.vacation.isLiked === 1;\n  const [likesCount, setLikesCount] = useState(initialLikesCount);\n  const [isLiked, setIsLiked] = useState(initialIsLiked);\n  const toggleLike = () => {\n    if (isLiked) {\n      setLikesCount(prev => prev - 1); // מוריד לייק\n      setIsLiked(false); // הפוך ל-לא אהוב\n    } else {\n      setLikesCount(prev => prev + 1); // מוסיף לייק\n      setIsLiked(true); // הפוך לאהוב\n    }\n  };\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n  };\n  useEffect(() => {\n    // עדכון הערכים של likesCount ו-isLiked כאשר props מתעדכן\n    setLikesCount(Number(props.vacation.likesCount) || 0);\n    setIsLiked(props.vacation.isLiked === 1);\n  }, [props.vacation.likesCount, props.vacation.isLiked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: props.vacation.imageUrl,\n        alt: \"vacation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `like-button ${isLiked ? \"liked\" : \"\"}`,\n            onClick: toggleLike,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2764\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), \" \", likesCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: props.vacation.destination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-range\",\n          children: [formatDate(props.vacation.startDate), \" - \", formatDate(props.vacation.endDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: props.vacation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-box\",\n          children: [\"$\", props.vacation.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(VacationCards, \"GnZPnepPcpJ8ZCq7CHtzEEgsCbI=\");\n_c = VacationCards;\nvar _c;\n$RefreshReg$(_c, \"VacationCards\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VacationCards","props","_s","initialLikesCount","Number","vacation","likesCount","initialIsLiked","isLiked","setLikesCount","setIsLiked","toggleLike","prev","formatDate","date","Date","toLocaleDateString","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","destination","startDate","endDate","description","price","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationCards/VacationCards.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import \"./VacationCards.css\";\n\n// type VacationCardProps = { vacation: VacationModel; };\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     const [likesCount, setLikesCount] = useState<number>(props.vacation.likesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(props.vacation.isLiked === 1);\n\n//     const toggleLike = () => {\n//         if (isLiked) {\n//             setLikesCount(likesCount - 1); // מוריד לייק\n//             setIsLiked(false); // הפוך ל-לא אהוב\n//         } else {\n//             setLikesCount(likesCount + 1); // מוסיף לייק\n//             setIsLiked(true); // הפוך לאהוב\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n//     };\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={props.vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={toggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{props.vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(props.vacation.startDate)} - {formatDate(props.vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{props.vacation.description}</p>\n//                     <div className=\"price-box\">${props.vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport \"./VacationCards.css\";\n\ntype VacationCardProps = { vacation: VacationModel; };\n\nexport function VacationCards(props: VacationCardProps): JSX.Element {\n    // בדיקה לוודא ש-likesCount הוא מספר ולא NaN\n    const initialLikesCount = Number(props.vacation.likesCount) || 0;\n    const initialIsLiked = props.vacation.isLiked === 1;\n\n    const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n    const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n    const toggleLike = () => {\n        if (isLiked) {\n            setLikesCount(prev => prev - 1); // מוריד לייק\n            setIsLiked(false); // הפוך ל-לא אהוב\n        } else {\n            setLikesCount(prev => prev + 1); // מוסיף לייק\n            setIsLiked(true); // הפוך לאהוב\n        }\n    };\n\n    const formatDate = (date: string): string => {\n        return new Date(date).toLocaleDateString(); // הצגת תאריך ללא שעה\n    };\n\n    useEffect(() => {\n        // עדכון הערכים של likesCount ו-isLiked כאשר props מתעדכן\n        setLikesCount(Number(props.vacation.likesCount) || 0);\n        setIsLiked(props.vacation.isLiked === 1);\n    }, [props.vacation.likesCount, props.vacation.isLiked]);\n\n    return (\n        <div className=\"VacationCards\">\n            <div className=\"card\">\n                <img className=\"card-img-top\" src={props.vacation.imageUrl} alt=\"vacation\" />\n                <div className=\"card-body\">\n                    <div className=\"like-container\">\n                        <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={toggleLike}>\n                            <span>❤️</span> {likesCount}\n                        </button>\n                    </div>\n                    <h5 className=\"card-title\">{props.vacation.destination}</h5>\n                    <span className=\"date-range\">\n                        {formatDate(props.vacation.startDate)} - {formatDate(props.vacation.endDate)}\n                    </span>\n                    <p className=\"card-text\">{props.vacation.description}</p>\n                    <div className=\"price-box\">${props.vacation.price}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}