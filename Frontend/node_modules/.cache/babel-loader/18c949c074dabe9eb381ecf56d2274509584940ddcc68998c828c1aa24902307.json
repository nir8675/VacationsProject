{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationList\\\\VacationList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport { Role } from \"../../../Models/enums\";\nimport { Link } from \"react-router-dom\";\nimport \"./VacationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function VacationList() {\n  _s();\n  const [vacations, setVacations] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showLiked, setShowLiked] = useState(false);\n  const [filterActive, setFilterActive] = useState(false);\n  const [filterUpcoming, setFilterUpcoming] = useState(false);\n  const itemsPerPage = 9;\n  const dispatch = useDispatch();\n\n  // Retrieve the token and roleId from Redux state\n  // The token is used for authentication, and roleId helps in identifying the user's role\n  const token = useSelector(state => state.auth.token);\n  const roleId = useSelector(state => state.user.roleId); // Select roleId from state\n\n  // Convert roleId to a number and check if the user is an admin\n  // This checks if the user's roleId corresponds to an admin role\n  const isAdmin = Number(roleId) === Role.Admin;\n  const userId = useSelector(state => state.user.id); // Select userId from state\n\n  // Fetch vacations based on the userId using useEffect\n  // This effect runs when the token, dispatch, or userId changes\n  useEffect(() => {\n    // If there's no token, warn that the user is not logged in and exit the function\n    if (!token) {\n      console.warn(\"User is not logged in.\");\n      return;\n    }\n\n    // Fetch the user's vacations from the API using their userId\n    vacationsService.getAllVacationsByUserId(userId).then(vacations => {\n      // If vacations were successfully fetched, update the state and dispatch an action\n      if (vacations.length > 0) {\n        setVacations(vacations); // Update the vacations state with the fetched data\n        const action = vacationActions.initVacations(vacations); // Prepare the action to initialize vacations in the Redux store\n        dispatch(action); // Dispatch the action to store the vacations in the Redux state\n      } else {\n        // Log a warning if no vacations were fetched\n        console.warn(\"No vacations were fetched from the API.\");\n      }\n    }).catch(err => {\n      // If there's an error during the API call, show an alert with the error message\n      alert(err.message);\n    });\n  }, [token, dispatch, userId]); // Dependencies: the effect runs when token, dispatch, or userId changes\n\n  // Pagination logic\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  // Function to filter vacations based on filter state\n  const filterVacations = vacation => {\n    const now = new Date().getTime();\n    const startDate = new Date(vacation.startDate).getTime();\n    const endDate = new Date(vacation.endDate).getTime();\n    const likedFilter = !showLiked || vacation.isLiked === 1;\n    const activeFilter = !filterActive || startDate <= now && endDate >= now;\n    const upcomingFilter = !filterUpcoming || startDate > now;\n    return likedFilter && activeFilter && upcomingFilter;\n  };\n  const currentVacations = vacations.filter(filterVacations).slice(indexOfFirstItem, indexOfLastItem);\n\n  // Function to handle vacation deletion\n  const handleDeleteVacation = async vacationId => {\n    try {\n      await vacationsService.deleteVacation(vacationId);\n      setVacations(prevVacations => prevVacations.filter(vacation => vacation.id !== vacationId));\n    } catch (error) {\n      console.error(\"Failed to delete vacation:\", error);\n    }\n  };\n\n  // Go to the next page\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  // Go to the previous page\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Toggle show liked vacations\n  const toggleShowLiked = () => {\n    setShowLiked(prevShowLiked => !prevShowLiked);\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n\n  // Toggle filter for active vacations\n  const toggleFilterActive = () => {\n    setFilterActive(prev => !prev);\n    setFilterUpcoming(false); // Disable the upcoming filter if active filter is selected\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n\n  // Toggle filter for upcoming vacations\n  const toggleFilterUpcoming = () => {\n    setFilterUpcoming(prev => !prev);\n    setFilterActive(false); // Disable the active filter if upcoming filter is selected\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header d-flex\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vacations/report\",\n        className: \"bn632-hover bn26\",\n        children: \"View Vacation Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), !isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            role: \"switch\",\n            id: \"flexSwitchCheckLiked\",\n            checked: showLiked,\n            onChange: toggleShowLiked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexSwitchCheckLiked\",\n            children: showLiked ? \"Show All Vacations\" : \"Show Liked Vacations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            role: \"switch\",\n            id: \"flexSwitchCheckActive\",\n            checked: filterActive,\n            onChange: toggleFilterActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexSwitchCheckActive\",\n            children: filterActive ? \"Show All Vacations\" : \"Show Active Vacations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            role: \"switch\",\n            id: \"flexSwitchCheckUpcoming\",\n            checked: filterUpcoming,\n            onChange: toggleFilterUpcoming\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexSwitchCheckUpcoming\",\n            children: filterUpcoming ? \"Show All Vacations\" : \"Show Upcoming Vacations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacation-cards-container\",\n      children: currentVacations.length > 0 ? currentVacations.map(vacation => /*#__PURE__*/_jsxDEV(VacationCards, {\n        vacation: vacation,\n        isAdmin: isAdmin // Pass isAdmin based on roleId\n        ,\n        onToggleLike: () => {\n          console.log(\"Like toggle function called\");\n        },\n        onDeleteVacation: handleDeleteVacation // Pass the delete function\n      }, vacation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No vacations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(vacations.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationList, \"8EKks+irmt/Kt0zxZtDYrinjoV0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = VacationList;\nvar _c;\n$RefreshReg$(_c, \"VacationList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","vacationActions","vacationsService","VacationCards","Role","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","VacationList","_s","vacations","setVacations","currentPage","setCurrentPage","showLiked","setShowLiked","filterActive","setFilterActive","filterUpcoming","setFilterUpcoming","itemsPerPage","dispatch","token","state","auth","roleId","user","isAdmin","Number","Admin","userId","id","console","warn","getAllVacationsByUserId","then","length","action","initVacations","catch","err","alert","message","indexOfLastItem","indexOfFirstItem","filterVacations","vacation","now","Date","getTime","startDate","endDate","likedFilter","isLiked","activeFilter","upcomingFilter","currentVacations","filter","slice","handleDeleteVacation","vacationId","deleteVacation","prevVacations","error","nextPage","Math","ceil","prevPage","toggleShowLiked","prevShowLiked","toggleFilterActive","prev","toggleFilterUpcoming","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","type","role","checked","onChange","htmlFor","map","onToggleLike","log","onDeleteVacation","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationList/VacationList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../Redux/store\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport { Role } from \"../../../Models/enums\";\nimport { Link } from \"react-router-dom\";\nimport \"./VacationList.css\";\n\nexport function VacationList(): JSX.Element {\n  const [vacations, setVacations] = useState<VacationModel[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [showLiked, setShowLiked] = useState<boolean>(false);\n  const [filterActive, setFilterActive] = useState<boolean>(false);\n  const [filterUpcoming, setFilterUpcoming] = useState<boolean>(false);\n  const itemsPerPage = 9;\n  const dispatch = useDispatch();\n\n  // Retrieve the token and roleId from Redux state\n  // The token is used for authentication, and roleId helps in identifying the user's role\n  const token = useSelector((state: AppState) => state.auth.token);\n  const roleId = useSelector((state: AppState) => state.user.roleId); // Select roleId from state\n\n  // Convert roleId to a number and check if the user is an admin\n  // This checks if the user's roleId corresponds to an admin role\n  const isAdmin = Number(roleId) === Role.Admin;\n\n  const userId = useSelector<AppState, number>((state) => state.user.id); // Select userId from state\n\n  // Fetch vacations based on the userId using useEffect\n  // This effect runs when the token, dispatch, or userId changes\n  useEffect(() => {\n    // If there's no token, warn that the user is not logged in and exit the function\n    if (!token) {\n      console.warn(\"User is not logged in.\");\n      return;\n    }\n\n    // Fetch the user's vacations from the API using their userId\n    vacationsService\n      .getAllVacationsByUserId(userId)\n      .then((vacations) => {\n        // If vacations were successfully fetched, update the state and dispatch an action\n        if (vacations.length > 0) {\n          setVacations(vacations); // Update the vacations state with the fetched data\n          const action = vacationActions.initVacations(vacations); // Prepare the action to initialize vacations in the Redux store\n          dispatch(action); // Dispatch the action to store the vacations in the Redux state\n        } else {\n          // Log a warning if no vacations were fetched\n          console.warn(\"No vacations were fetched from the API.\");\n        }\n      })\n      .catch((err) => {\n        // If there's an error during the API call, show an alert with the error message\n        alert(err.message);\n      });\n  }, [token, dispatch, userId]); // Dependencies: the effect runs when token, dispatch, or userId changes\n\n  // Pagination logic\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  // Function to filter vacations based on filter state\n  const filterVacations = (vacation: VacationModel) => {\n    const now = new Date().getTime();\n    const startDate = new Date(vacation.startDate).getTime();\n    const endDate = new Date(vacation.endDate).getTime();\n\n    const likedFilter = !showLiked || vacation.isLiked === 1;\n    const activeFilter = !filterActive || (startDate <= now && endDate >= now);\n    const upcomingFilter = !filterUpcoming || startDate > now;\n\n    return likedFilter && activeFilter && upcomingFilter;\n  };\n\n  const currentVacations = vacations\n    .filter(filterVacations)\n    .slice(indexOfFirstItem, indexOfLastItem);\n\n  // Function to handle vacation deletion\n  const handleDeleteVacation = async (vacationId: number) => {\n    try {\n      await vacationsService.deleteVacation(vacationId);\n      setVacations((prevVacations) =>\n        prevVacations.filter((vacation) => vacation.id !== vacationId)\n      );\n    } catch (error) {\n      console.error(\"Failed to delete vacation:\", error);\n    }\n  };\n\n  // Go to the next page\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  // Go to the previous page\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Toggle show liked vacations\n  const toggleShowLiked = () => {\n    setShowLiked((prevShowLiked) => !prevShowLiked);\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n\n  // Toggle filter for active vacations\n  const toggleFilterActive = () => {\n    setFilterActive((prev) => !prev);\n    setFilterUpcoming(false); // Disable the upcoming filter if active filter is selected\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n\n  // Toggle filter for upcoming vacations\n  const toggleFilterUpcoming = () => {\n    setFilterUpcoming((prev) => !prev);\n    setFilterActive(false); // Disable the active filter if upcoming filter is selected\n    setCurrentPage(1); // Reset pagination to the first page\n  };\n\n  return (\n    <div className=\"VacationList\">\n      <div className=\"header d-flex\">\n        {isAdmin && (\n          <Link to=\"/vacations/report\" className=\"bn632-hover bn26\">\n            View Vacation Report\n          </Link>\n        )}\n        {!isAdmin && (\n          <>\n            <div className=\"form-check form-switch\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                id=\"flexSwitchCheckLiked\"\n                checked={showLiked}\n                onChange={toggleShowLiked}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckLiked\"\n              >\n                {showLiked ? \"Show All Vacations\" : \"Show Liked Vacations\"}\n              </label>\n            </div>\n\n            <div className=\"form-check form-switch\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                id=\"flexSwitchCheckActive\"\n                checked={filterActive}\n                onChange={toggleFilterActive}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckActive\"\n              >\n                {filterActive ? \"Show All Vacations\" : \"Show Active Vacations\"}\n              </label>\n            </div>\n\n            <div className=\"form-check form-switch\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                id=\"flexSwitchCheckUpcoming\"\n                checked={filterUpcoming}\n                onChange={toggleFilterUpcoming}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckUpcoming\"\n              >\n                {filterUpcoming\n                  ? \"Show All Vacations\"\n                  : \"Show Upcoming Vacations\"}\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"vacation-cards-container\">\n        {currentVacations.length > 0 ? (\n          currentVacations.map((vacation) => (\n            <VacationCards\n              key={vacation.id}\n              vacation={vacation}\n              isAdmin={isAdmin} // Pass isAdmin based on roleId\n              onToggleLike={() => {\n                console.log(\"Like toggle function called\");\n              }}\n              onDeleteVacation={handleDeleteVacation} // Pass the delete function\n            />\n          ))\n        ) : (\n          <p>No vacations available</p>\n        )}\n      </div>\n\n      <div className=\"pagination\">\n        <button onClick={prevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span>Page {currentPage}</span>\n        <button\n          onClick={nextPage}\n          disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,OAAO,SAASC,YAAYA,CAAA,EAAgB;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAkB,EAAE,CAAC;EAC/D,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAS,CAAC,CAAC;EACzD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAU,KAAK,CAAC;EACpE,MAAMwB,YAAY,GAAG,CAAC;EACtB,MAAMC,QAAQ,GAAGxB,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA,MAAMyB,KAAK,GAAGxB,WAAW,CAAEyB,KAAe,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAChE,MAAMG,MAAM,GAAG3B,WAAW,CAAEyB,KAAe,IAAKA,KAAK,CAACG,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC;;EAEpE;EACA;EACA,MAAME,OAAO,GAAGC,MAAM,CAACH,MAAM,CAAC,KAAKvB,IAAI,CAAC2B,KAAK;EAE7C,MAAMC,MAAM,GAAGhC,WAAW,CAAoByB,KAAK,IAAKA,KAAK,CAACG,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC;;EAExE;EACA;EACApC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAAC2B,KAAK,EAAE;MACVU,OAAO,CAACC,IAAI,CAAC,wBAAwB,CAAC;MACtC;IACF;;IAEA;IACAjC,gBAAgB,CACbkC,uBAAuB,CAACJ,MAAM,CAAC,CAC/BK,IAAI,CAAEzB,SAAS,IAAK;MACnB;MACA,IAAIA,SAAS,CAAC0B,MAAM,GAAG,CAAC,EAAE;QACxBzB,YAAY,CAACD,SAAS,CAAC,CAAC,CAAC;QACzB,MAAM2B,MAAM,GAAGtC,eAAe,CAACuC,aAAa,CAAC5B,SAAS,CAAC,CAAC,CAAC;QACzDW,QAAQ,CAACgB,MAAM,CAAC,CAAC,CAAC;MACpB,CAAC,MAAM;QACL;QACAL,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;MACzD;IACF,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACd;MACAC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACpB,KAAK,EAAED,QAAQ,EAAES,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE/B;EACA,MAAMa,eAAe,GAAG/B,WAAW,GAAGQ,YAAY;EAClD,MAAMwB,gBAAgB,GAAGD,eAAe,GAAGvB,YAAY;;EAEvD;EACA,MAAMyB,eAAe,GAAIC,QAAuB,IAAK;IACnD,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAChC,MAAMC,SAAS,GAAG,IAAIF,IAAI,CAACF,QAAQ,CAACI,SAAS,CAAC,CAACD,OAAO,CAAC,CAAC;IACxD,MAAME,OAAO,GAAG,IAAIH,IAAI,CAACF,QAAQ,CAACK,OAAO,CAAC,CAACF,OAAO,CAAC,CAAC;IAEpD,MAAMG,WAAW,GAAG,CAACtC,SAAS,IAAIgC,QAAQ,CAACO,OAAO,KAAK,CAAC;IACxD,MAAMC,YAAY,GAAG,CAACtC,YAAY,IAAKkC,SAAS,IAAIH,GAAG,IAAII,OAAO,IAAIJ,GAAI;IAC1E,MAAMQ,cAAc,GAAG,CAACrC,cAAc,IAAIgC,SAAS,GAAGH,GAAG;IAEzD,OAAOK,WAAW,IAAIE,YAAY,IAAIC,cAAc;EACtD,CAAC;EAED,MAAMC,gBAAgB,GAAG9C,SAAS,CAC/B+C,MAAM,CAACZ,eAAe,CAAC,CACvBa,KAAK,CAACd,gBAAgB,EAAED,eAAe,CAAC;;EAE3C;EACA,MAAMgB,oBAAoB,GAAG,MAAOC,UAAkB,IAAK;IACzD,IAAI;MACF,MAAM5D,gBAAgB,CAAC6D,cAAc,CAACD,UAAU,CAAC;MACjDjD,YAAY,CAAEmD,aAAa,IACzBA,aAAa,CAACL,MAAM,CAAEX,QAAQ,IAAKA,QAAQ,CAACf,EAAE,KAAK6B,UAAU,CAC/D,CAAC;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd/B,OAAO,CAAC+B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIpD,WAAW,GAAGqD,IAAI,CAACC,IAAI,CAACxD,SAAS,CAAC0B,MAAM,GAAGhB,YAAY,CAAC,EAAE;MAC5DP,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMuD,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIvD,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMwD,eAAe,GAAGA,CAAA,KAAM;IAC5BrD,YAAY,CAAEsD,aAAa,IAAK,CAACA,aAAa,CAAC;IAC/CxD,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAMyD,kBAAkB,GAAGA,CAAA,KAAM;IAC/BrD,eAAe,CAAEsD,IAAI,IAAK,CAACA,IAAI,CAAC;IAChCpD,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1BN,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAM2D,oBAAoB,GAAGA,CAAA,KAAM;IACjCrD,iBAAiB,CAAEoD,IAAI,IAAK,CAACA,IAAI,CAAC;IAClCtD,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IACxBJ,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKoE,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BrE,OAAA;MAAKoE,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3B/C,OAAO,iBACNtB,OAAA,CAACF,IAAI;QAACwE,EAAE,EAAC,mBAAmB;QAACF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAE1D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP,EACA,CAACpD,OAAO,iBACPtB,OAAA,CAAAE,SAAA;QAAAmE,QAAA,gBACErE,OAAA;UAAKoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCrE,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BO,IAAI,EAAC,UAAU;YACfC,IAAI,EAAC,QAAQ;YACblD,EAAE,EAAC,sBAAsB;YACzBmD,OAAO,EAAEpE,SAAU;YACnBqE,QAAQ,EAAEf;UAAgB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACF1E,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BW,OAAO,EAAC,sBAAsB;YAAAV,QAAA,EAE7B5D,SAAS,GAAG,oBAAoB,GAAG;UAAsB;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN1E,OAAA;UAAKoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCrE,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BO,IAAI,EAAC,UAAU;YACfC,IAAI,EAAC,QAAQ;YACblD,EAAE,EAAC,uBAAuB;YAC1BmD,OAAO,EAAElE,YAAa;YACtBmE,QAAQ,EAAEb;UAAmB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACF1E,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BW,OAAO,EAAC,uBAAuB;YAAAV,QAAA,EAE9B1D,YAAY,GAAG,oBAAoB,GAAG;UAAuB;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN1E,OAAA;UAAKoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCrE,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BO,IAAI,EAAC,UAAU;YACfC,IAAI,EAAC,QAAQ;YACblD,EAAE,EAAC,yBAAyB;YAC5BmD,OAAO,EAAEhE,cAAe;YACxBiE,QAAQ,EAAEX;UAAqB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACF1E,OAAA;YACEoE,SAAS,EAAC,kBAAkB;YAC5BW,OAAO,EAAC,yBAAyB;YAAAV,QAAA,EAEhCxD,cAAc,GACX,oBAAoB,GACpB;UAAyB;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN1E,OAAA;MAAKoE,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACtClB,gBAAgB,CAACpB,MAAM,GAAG,CAAC,GAC1BoB,gBAAgB,CAAC6B,GAAG,CAAEvC,QAAQ,iBAC5BzC,OAAA,CAACJ,aAAa;QAEZ6C,QAAQ,EAAEA,QAAS;QACnBnB,OAAO,EAAEA,OAAQ,CAAC;QAAA;QAClB2D,YAAY,EAAEA,CAAA,KAAM;UAClBtD,OAAO,CAACuD,GAAG,CAAC,6BAA6B,CAAC;QAC5C,CAAE;QACFC,gBAAgB,EAAE7B,oBAAqB,CAAC;MAAA,GANnCb,QAAQ,CAACf,EAAE;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOjB,CACF,CAAC,gBAEF1E,OAAA;QAAAqE,QAAA,EAAG;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN1E,OAAA;MAAKoE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrE,OAAA;QAAQoF,OAAO,EAAEtB,QAAS;QAACuB,QAAQ,EAAE9E,WAAW,KAAK,CAAE;QAAA8D,QAAA,EAAC;MAExD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1E,OAAA;QAAAqE,QAAA,GAAM,OAAK,EAAC9D,WAAW;MAAA;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B1E,OAAA;QACEoF,OAAO,EAAEzB,QAAS;QAClB0B,QAAQ,EAAE9E,WAAW,KAAKqD,IAAI,CAACC,IAAI,CAACxD,SAAS,CAAC0B,MAAM,GAAGhB,YAAY,CAAE;QAAAsD,QAAA,EACtE;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtE,EAAA,CAtNeD,YAAY;EAAA,QAOTX,WAAW,EAIdC,WAAW,EACVA,WAAW,EAMXA,WAAW;AAAA;AAAA6F,EAAA,GAlBZnF,YAAY;AAAA,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}