{"ast":null,"code":"// Init all Vacations\nexport function initVacations(currentState, action) {\n  const newState = action.payload; // Here, action.payload is all Vacations to init.\n  return newState;\n}\n\n// Add Vacation:\nexport function addVacation(currentState, action) {\n  const newState = [...currentState];\n  newState.push(action.payload); // Here, action.payload is a Vacation to add.\n  return newState.sort((a, b) => new Date(a.startDate).getTime() - new Date(b.startDate).getTime());\n}\n\n// Update Vacation:\nexport function updateVacation(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(v => v.id === action.payload.id);\n  if (index !== -1) {\n    newState[index] = action.payload; // Update the vacation details with the new data\n  }\n  return newState;\n}\n\n// Delete Vacation:\nexport function deleteVacation(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(v => v.id === action.payload);\n  if (index !== -1) {\n    newState.splice(index, 1);\n  }\n  return newState;\n}\n\n// Initialize User:\nexport function initUser(currentState, action) {\n  const newState = action.payload;\n  return newState;\n}\n\n// Logout User:\nexport function logoutUser(currentState, action) {\n  const newState = null;\n  return newState;\n}","map":{"version":3,"names":["initVacations","currentState","action","newState","payload","addVacation","push","sort","a","b","Date","startDate","getTime","updateVacation","index","findIndex","v","id","deleteVacation","splice","initUser","logoutUser"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Redux/reducers.ts"],"sourcesContent":["import { Action, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { UserModel } from \"../Models/UserModel\";\r\nimport { VacationModel } from \"../Models/VacationModel\";\r\n\r\n// Init all Vacations\r\nexport function initVacations(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<VacationModel[]>\r\n) {\r\n  const newState: VacationModel[] = action.payload; // Here, action.payload is all Vacations to init.\r\n  return newState;\r\n}\r\n\r\n// Add Vacation:\r\nexport function addVacation(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<VacationModel>\r\n) {\r\n  const newState: VacationModel[] = [...currentState];\r\n  newState.push(action.payload); // Here, action.payload is a Vacation to add.\r\n  return newState.sort(\r\n    (a, b) => new Date(a.startDate).getTime() - new Date(b.startDate).getTime()\r\n  );\r\n}\r\n\r\n// Update Vacation:\r\nexport function updateVacation(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<VacationModel>\r\n) {\r\n  const newState: VacationModel[] = [...currentState];\r\n  const index = newState.findIndex((v) => v.id === action.payload.id);\r\n  if (index !== -1) {\r\n    newState[index] = action.payload; // Update the vacation details with the new data\r\n  }\r\n  return newState;\r\n}\r\n\r\n// Delete Vacation:\r\nexport function deleteVacation(\r\n  currentState: VacationModel[],\r\n  action: PayloadAction<number>\r\n) {\r\n  const newState: VacationModel[] = [...currentState];\r\n  const index = newState.findIndex((v) => v.id === action.payload);\r\n  if (index !== -1) {\r\n    newState.splice(index, 1);\r\n  }\r\n  return newState;\r\n}\r\n\r\n// Initialize User:\r\nexport function initUser(\r\n  currentState: UserModel,\r\n  action: PayloadAction<UserModel>\r\n) {\r\n  const newState: UserModel = action.payload;\r\n  return newState;\r\n}\r\n\r\n// Logout User:\r\nexport function logoutUser(currentState: UserModel, action: Action) {\r\n  const newState: UserModel = null;\r\n  return newState;\r\n}\r\n"],"mappings":"AAIA;AACA,OAAO,SAASA,aAAaA,CAC3BC,YAA6B,EAC7BC,MAAsC,EACtC;EACA,MAAMC,QAAyB,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;EAClD,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASE,WAAWA,CACzBJ,YAA6B,EAC7BC,MAAoC,EACpC;EACA,MAAMC,QAAyB,GAAG,CAAC,GAAGF,YAAY,CAAC;EACnDE,QAAQ,CAACG,IAAI,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;EAC/B,OAAOD,QAAQ,CAACI,IAAI,CAClB,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,CAAC,CAC5E,CAAC;AACH;;AAEA;AACA,OAAO,SAASC,cAAcA,CAC5BZ,YAA6B,EAC7BC,MAAoC,EACpC;EACA,MAAMC,QAAyB,GAAG,CAAC,GAAGF,YAAY,CAAC;EACnD,MAAMa,KAAK,GAAGX,QAAQ,CAACY,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKf,MAAM,CAACE,OAAO,CAACa,EAAE,CAAC;EACnE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBX,QAAQ,CAACW,KAAK,CAAC,GAAGZ,MAAM,CAACE,OAAO,CAAC,CAAC;EACpC;EACA,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASe,cAAcA,CAC5BjB,YAA6B,EAC7BC,MAA6B,EAC7B;EACA,MAAMC,QAAyB,GAAG,CAAC,GAAGF,YAAY,CAAC;EACnD,MAAMa,KAAK,GAAGX,QAAQ,CAACY,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKf,MAAM,CAACE,OAAO,CAAC;EAChE,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBX,QAAQ,CAACgB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;EAC3B;EACA,OAAOX,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASiB,QAAQA,CACtBnB,YAAuB,EACvBC,MAAgC,EAChC;EACA,MAAMC,QAAmB,GAAGD,MAAM,CAACE,OAAO;EAC1C,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASkB,UAAUA,CAACpB,YAAuB,EAAEC,MAAc,EAAE;EAClE,MAAMC,QAAmB,GAAG,IAAI;EAChC,OAAOA,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}