{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationCards\\\\VacationCards.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { Link } from \"react-router-dom\"; // Assuming you're using react-router for navigation\n// import \"./VacationCards.css\";\n\n// interface VacationCardProps {\n//   vacation: VacationModel;\n//   onToggleLike: () => void;\n//   isAdmin: boolean; // Add isAdmin prop to indicate if the user is an admin\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//   const { vacation, onToggleLike, isAdmin } = props;\n\n//   // Initialize likes count and like state from the vacation props\n//   const initialLikesCount = Number(vacation.likesCount) || 0;\n//   const initialIsLiked = vacation.isLiked === 1;\n\n//   const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//   const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//   // Function to handle like button click\n//   const handleToggleLike = async () => {\n//     try {\n//       const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//       setLikesCount(updatedVacation.likesCount);\n//       setIsLiked(updatedVacation.isLiked === 1);\n//       onToggleLike(); // Call external function passed as a prop\n//     } catch (error) {\n//       console.error(\"Failed to toggle like:\", error);\n//     }\n//   };\n\n//   // Function to format date to display in Israeli format\n//   const formatDate = (date: string): string => {\n//     return new Date(date).toLocaleDateString(\"he-IL\");\n//   };\n\n//   // useEffect to update state when vacation details change\n//   useEffect(() => {\n//     setLikesCount(Number(vacation.likesCount) || 0);\n//     setIsLiked(vacation.isLiked === 1);\n//   }, [vacation.likesCount, vacation.isLiked]);\n\n//   return (\n//     <div className=\"VacationCards\">\n//       <div className=\"card\">\n//         <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{vacation.destination}</h5>\n//           <span className=\"date-range\">\n//             {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//           </span>\n//           <p className=\"card-text\">{vacation.description}</p>\n//           <div className=\"price-box\">${vacation.price}</div>\n\n//           {/* Display Like/Unlike buttons only if the user is NOT an Admin */}\n//           {!isAdmin && (\n//             <div className=\"like-container\">\n//               <button\n//                 className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n//                 onClick={handleToggleLike}\n//               >\n//                 <span>❤️</span> {likesCount}\n//               </button>\n//             </div>\n//           )}\n\n//           {/* Display Edit button if the user is an Admin */}\n//           {isAdmin && (\n//             <Link\n//               to={`/edit-vacation/${vacation.id}`}\n//               className=\"btn btn-primary\"\n//             >\n//               Edit Vacation\n//             </Link>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { Link } from \"react-router-dom\";\nimport \"./VacationCards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VacationCards(props) {\n  _s();\n  const {\n    vacation,\n    onToggleLike,\n    isAdmin\n  } = props;\n  const initialLikesCount = Number(vacation.likesCount) || 0;\n  const initialIsLiked = vacation.isLiked === 1;\n  const [likesCount, setLikesCount] = useState(initialLikesCount);\n  const [isLiked, setIsLiked] = useState(initialIsLiked);\n  const handleToggleLike = async () => {\n    try {\n      const updatedVacation = await vacationsService.toggleLike(vacation.id);\n      setLikesCount(updatedVacation.likesCount);\n      setIsLiked(updatedVacation.isLiked === 1);\n      onToggleLike();\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n    }\n  };\n  useEffect(() => {\n    setLikesCount(Number(vacation.likesCount) || 0);\n    setIsLiked(vacation.isLiked === 1);\n  }, [vacation.likesCount, vacation.isLiked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: vacation.imageUrl,\n        alt: \"vacation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: vacation.destination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-range\",\n          children: [new Date(vacation.startDate).toLocaleDateString(\"he-IL\"), \" -\", new Date(vacation.endDate).toLocaleDateString(\"he-IL\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: vacation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-box\",\n          children: [\"$\", vacation.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `like-button ${isLiked ? \"liked\" : \"\"}`,\n            onClick: handleToggleLike,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2764\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), \" \", likesCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit-vacation/${vacation.id}`,\n          className: \"btn btn-primary\",\n          children: \"Edit Vacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationCards, \"GnZPnepPcpJ8ZCq7CHtzEEgsCbI=\");\n_c = VacationCards;\nvar _c;\n$RefreshReg$(_c, \"VacationCards\");","map":{"version":3,"names":["React","useState","useEffect","vacationsService","Link","jsxDEV","_jsxDEV","VacationCards","props","_s","vacation","onToggleLike","isAdmin","initialLikesCount","Number","likesCount","initialIsLiked","isLiked","setLikesCount","setIsLiked","handleToggleLike","updatedVacation","toggleLike","id","error","console","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","destination","Date","startDate","toLocaleDateString","endDate","description","price","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationCards/VacationCards.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { Link } from \"react-router-dom\"; // Assuming you're using react-router for navigation\n// import \"./VacationCards.css\";\n\n// interface VacationCardProps {\n//   vacation: VacationModel;\n//   onToggleLike: () => void;\n//   isAdmin: boolean; // Add isAdmin prop to indicate if the user is an admin\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//   const { vacation, onToggleLike, isAdmin } = props;\n\n//   // Initialize likes count and like state from the vacation props\n//   const initialLikesCount = Number(vacation.likesCount) || 0;\n//   const initialIsLiked = vacation.isLiked === 1;\n\n//   const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//   const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//   // Function to handle like button click\n//   const handleToggleLike = async () => {\n//     try {\n//       const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//       setLikesCount(updatedVacation.likesCount);\n//       setIsLiked(updatedVacation.isLiked === 1);\n//       onToggleLike(); // Call external function passed as a prop\n//     } catch (error) {\n//       console.error(\"Failed to toggle like:\", error);\n//     }\n//   };\n\n//   // Function to format date to display in Israeli format\n//   const formatDate = (date: string): string => {\n//     return new Date(date).toLocaleDateString(\"he-IL\");\n//   };\n\n//   // useEffect to update state when vacation details change\n//   useEffect(() => {\n//     setLikesCount(Number(vacation.likesCount) || 0);\n//     setIsLiked(vacation.isLiked === 1);\n//   }, [vacation.likesCount, vacation.isLiked]);\n\n//   return (\n//     <div className=\"VacationCards\">\n//       <div className=\"card\">\n//         <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{vacation.destination}</h5>\n//           <span className=\"date-range\">\n//             {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//           </span>\n//           <p className=\"card-text\">{vacation.description}</p>\n//           <div className=\"price-box\">${vacation.price}</div>\n\n//           {/* Display Like/Unlike buttons only if the user is NOT an Admin */}\n//           {!isAdmin && (\n//             <div className=\"like-container\">\n//               <button\n//                 className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n//                 onClick={handleToggleLike}\n//               >\n//                 <span>❤️</span> {likesCount}\n//               </button>\n//             </div>\n//           )}\n\n//           {/* Display Edit button if the user is an Admin */}\n//           {isAdmin && (\n//             <Link\n//               to={`/edit-vacation/${vacation.id}`}\n//               className=\"btn btn-primary\"\n//             >\n//               Edit Vacation\n//             </Link>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { Link } from \"react-router-dom\";\nimport \"./VacationCards.css\";\n\ninterface VacationCardProps {\n  vacation: VacationModel;\n  onToggleLike: () => void;\n  isAdmin: boolean;\n}\n\nexport function VacationCards(props: VacationCardProps): JSX.Element {\n  const { vacation, onToggleLike, isAdmin } = props;\n\n  const initialLikesCount = Number(vacation.likesCount) || 0;\n  const initialIsLiked = vacation.isLiked === 1;\n\n  const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n  const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n  const handleToggleLike = async () => {\n    try {\n      const updatedVacation = await vacationsService.toggleLike(vacation.id);\n      setLikesCount(updatedVacation.likesCount);\n      setIsLiked(updatedVacation.isLiked === 1);\n      onToggleLike();\n    } catch (error) {\n      console.error(\"Failed to toggle like:\", error);\n    }\n  };\n\n  useEffect(() => {\n    setLikesCount(Number(vacation.likesCount) || 0);\n    setIsLiked(vacation.isLiked === 1);\n  }, [vacation.likesCount, vacation.isLiked]);\n\n  return (\n    <div className=\"VacationCards\">\n      <div className=\"card\">\n        <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{vacation.destination}</h5>\n          <span className=\"date-range\">\n            {new Date(vacation.startDate).toLocaleDateString(\"he-IL\")} -\n            {new Date(vacation.endDate).toLocaleDateString(\"he-IL\")}\n          </span>\n          <p className=\"card-text\">{vacation.description}</p>\n          <div className=\"price-box\">${vacation.price}</div>\n\n          {!isAdmin && (\n            <div className=\"like-container\">\n              <button\n                className={`like-button ${isLiked ? \"liked\" : \"\"}`}\n                onClick={handleToggleLike}\n              >\n                <span>❤️</span> {likesCount}\n              </button>\n            </div>\n          )}\n\n          {isAdmin && (\n            <Link\n              to={`/edit-vacation/${vacation.id}`}\n              className=\"btn btn-primary\"\n            >\n              Edit Vacation\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}