{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationReport\\\\VacationReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { saveAs } from \"file-saver\"; // file-saver for CSV download\nimport { useNavigate } from \"react-router-dom\";\nimport \"./VacationReport.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function VacationReport() {\n  _s();\n  const [reportData, setReportData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchReportData = async () => {\n      try {\n        const data = await vacationsService.getVacationLikesReport();\n        setReportData(data);\n      } catch (err) {\n        console.error(\"Failed to fetch vacation report:\", err);\n      }\n    };\n    fetchReportData();\n  }, []);\n  const chartData = {\n    labels: reportData.map(vacation => vacation.destination),\n    datasets: [{\n      label: \"Number of Likes\",\n      data: reportData.map(vacation => vacation.likesCount),\n      backgroundColor: \"rgb(13, 110, 253)\"\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Vacation Likes Report\"\n      }\n    }\n  };\n  const handleDownloadCSV = () => {\n    // Step 1: Create the CSV content with headers and report data\n    const csvContent = [[\"Destination\", \"Likes\"],\n    // Column headers\n    ...reportData.map(vacation => [vacation.destination, vacation.likesCount]) // Map through the report data.\n    ].map(row => row.join(\",\")) // Join each row with a comma\n    .join(\"\\n\"); // Join rows with a new line\n\n    // Step 2: Add BOM (Byte Order Mark) to ensure UTF-8 encoding with Excel\n    const bom = \"\\uFEFF\"; // BOM for UTF-8\n\n    // Step 3: Create a Blob with BOM + CSV content\n    const blob = new Blob([bom + csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n\n    // Step 4: Use file-saver's 'saveAs' function to trigger the download\n    saveAs(blob, \"vacation-likes-report.csv\");\n  };\n  const handleBackToVacations = () => {\n    navigate(\"/vacations\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationReport\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-back\",\n      onClick: handleBackToVacations,\n      children: \"\\u25C0 Back to Vacations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-download\",\n      onClick: handleDownloadCSV,\n      children: \"Export CSV  \\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vacations Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(VacationReport, \"4IpZhggZJhOxaIMUWmPNI0VOd90=\", false, function () {\n  return [useNavigate];\n});\n_c = VacationReport;\nvar _c;\n$RefreshReg$(_c, \"VacationReport\");","map":{"version":3,"names":["React","useEffect","useState","Bar","vacationsService","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","saveAs","useNavigate","jsxDEV","_jsxDEV","register","VacationReport","_s","reportData","setReportData","navigate","fetchReportData","data","getVacationLikesReport","err","console","error","chartData","labels","map","vacation","destination","datasets","label","likesCount","backgroundColor","chartOptions","responsive","plugins","legend","display","position","title","text","handleDownloadCSV","csvContent","row","join","bom","blob","Blob","type","handleBackToVacations","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationReport/VacationReport.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { saveAs } from \"file-saver\"; // file-saver for CSV download\nimport { useNavigate } from \"react-router-dom\";\nimport \"./VacationReport.css\";\n\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport function VacationReport(): JSX.Element {\n    const [reportData, setReportData] = useState<{ destination: string; likesCount: number; }[]>([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchReportData = async () => {\n            try {\n                const data = await vacationsService.getVacationLikesReport();\n                setReportData(data);\n            } catch (err) {\n                console.error(\"Failed to fetch vacation report:\", err);\n            }\n        };\n        fetchReportData();\n    }, []);\n\n    const chartData = {\n        labels: reportData.map((vacation) => vacation.destination),\n        datasets: [\n            {\n                label: \"Number of Likes\",\n                data: reportData.map((vacation) => vacation.likesCount),\n                backgroundColor: \"rgb(13, 110, 253)\",\n            },\n        ],\n    };\n\n    const chartOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                display: true,\n                position: \"top\" as const,\n            },\n            title: {\n                display: true,\n                text: \"Vacation Likes Report\",\n            },\n        },\n    };\n\n    const handleDownloadCSV = () => {\n        // Step 1: Create the CSV content with headers and report data\n        const csvContent = [\n            [\"Destination\", \"Likes\"], // Column headers\n            ...reportData.map((vacation) => [vacation.destination, vacation.likesCount]), // Map through the report data.\n        ]\n            .map((row) => row.join(\",\")) // Join each row with a comma\n            .join(\"\\n\"); // Join rows with a new line\n\n        // Step 2: Add BOM (Byte Order Mark) to ensure UTF-8 encoding with Excel\n        const bom = \"\\uFEFF\"; // BOM for UTF-8\n\n        // Step 3: Create a Blob with BOM + CSV content\n        const blob = new Blob([bom + csvContent], {\n            type: \"text/csv;charset=utf-8;\",\n        });\n\n        // Step 4: Use file-saver's 'saveAs' function to trigger the download\n        saveAs(blob, \"vacation-likes-report.csv\");\n    };\n\n\n\n\n    const handleBackToVacations = () => {\n        navigate(\"/vacations\");\n    };\n\n    return (\n        <div className=\"VacationReport\">\n\n            <button className=\"btn-back\" onClick={handleBackToVacations}>\n                ◀ Back to Vacations\n            </button>\n\n\n            <button className=\"btn-download\" onClick={handleDownloadCSV}>\n                Export CSV  ▼\n            </button>\n\n            <h2>Vacations Report</h2>\n            <Bar data={chartData} options={chartOptions} />\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}