{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from '../../../Services/VacationsService';\n\n// import \"./VacationCards.css\";\n\n// // Define VacationCardProps to include the vacation and the onToggleLike function\n\n// interface VacationCardProps {\n//     vacation: VacationModel;\n//     onToggleLike: () => void; // Function to handle like toggle from parent\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     const { vacation, onToggleLike } = props;\n\n//     // Ensure likesCount is a number and initialize isLiked state correctly\n//     const initialLikesCount = Number(vacation.likesCount) || 0;\n//     const initialIsLiked = vacation.isLiked === 1;\n\n//     const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//     const handleToggleLike = async () => {\n//         try {\n//             // Call the service to toggle the like and update the Redux store\n//             const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//             setLikesCount(updatedVacation.likesCount);\n//             setIsLiked(updatedVacation.isLiked === 1);\n//             onToggleLike(); // Call the parent function to handle like\n//         } catch (error) {\n//             console.error('Failed to toggle like:', error);\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString('he-IL'); // Format date to DD/MM/YYYY\n//     };\n\n//     useEffect(() => {\n//         // Update local state when props change\n//         setLikesCount(Number(vacation.likesCount) || 0);\n//         setIsLiked(vacation.isLiked === 1);\n//     }, [vacation.likesCount, vacation.isLiked]);\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={handleToggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{vacation.description}</p>\n//                     <div className=\"price-box\">${vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationCards/VacationCards.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationsService } from '../../../Services/VacationsService';\n\n// import \"./VacationCards.css\";\n\n// // Define VacationCardProps to include the vacation and the onToggleLike function\n\n// interface VacationCardProps {\n//     vacation: VacationModel;\n//     onToggleLike: () => void; // Function to handle like toggle from parent\n// }\n\n// export function VacationCards(props: VacationCardProps): JSX.Element {\n//     const { vacation, onToggleLike } = props;\n\n//     // Ensure likesCount is a number and initialize isLiked state correctly\n//     const initialLikesCount = Number(vacation.likesCount) || 0;\n//     const initialIsLiked = vacation.isLiked === 1;\n\n//     const [likesCount, setLikesCount] = useState<number>(initialLikesCount);\n//     const [isLiked, setIsLiked] = useState<boolean>(initialIsLiked);\n\n//     const handleToggleLike = async () => {\n//         try {\n//             // Call the service to toggle the like and update the Redux store\n//             const updatedVacation = await vacationsService.toggleLike(vacation.id);\n//             setLikesCount(updatedVacation.likesCount);\n//             setIsLiked(updatedVacation.isLiked === 1);\n//             onToggleLike(); // Call the parent function to handle like\n//         } catch (error) {\n//             console.error('Failed to toggle like:', error);\n//         }\n//     };\n\n//     const formatDate = (date: string): string => {\n//         return new Date(date).toLocaleDateString('he-IL'); // Format date to DD/MM/YYYY\n//     };\n\n//     useEffect(() => {\n//         // Update local state when props change\n//         setLikesCount(Number(vacation.likesCount) || 0);\n//         setIsLiked(vacation.isLiked === 1);\n//     }, [vacation.likesCount, vacation.isLiked]);\n\n//     return (\n//         <div className=\"VacationCards\">\n//             <div className=\"card\">\n//                 <img className=\"card-img-top\" src={vacation.imageUrl} alt=\"vacation\" />\n//                 <div className=\"card-body\">\n//                     <div className=\"like-container\">\n//                         <button className={`like-button ${isLiked ? \"liked\" : \"\"}`} onClick={handleToggleLike}>\n//                             <span>❤️</span> {likesCount}\n//                         </button>\n//                     </div>\n//                     <h5 className=\"card-title\">{vacation.destination}</h5>\n//                     <span className=\"date-range\">\n//                         {formatDate(vacation.startDate)} - {formatDate(vacation.endDate)}\n//                     </span>\n//                     <p className=\"card-text\">{vacation.description}</p>\n//                     <div className=\"price-box\">${vacation.price}</div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}