{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\02092024ProjectVacation\\\\Frontend\\\\src\\\\Components\\\\VacationArea\\\\VacationList\\\\VacationList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationActions } from \"../../../Redux/store\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { VacationCards } from \"../VacationCards/VacationCards\";\n// import \"./VacationList.css\";\n// import axios from \"axios\";\n\n// export function VacationList(): JSX.Element {\n//     const [vacations, setVacations] = useState<VacationModel[]>([]);\n//     const [currentPage, setCurrentPage] = useState<number>(1);\n//     const [itemsPerPage] = useState<number>(9);\n//     const dispatch = useDispatch();\n\n//     // Set token in the header for all axios requests\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\"); // Get the token from local storage\n//         if (token) {\n//             axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in the headers\n//         }\n\n//         // Fetch vacations only if the token exists\n//         if (token) {\n//             vacationsService.getAllVacations()\n//                 .then(vacations => {\n//                     setVacations(vacations);\n//                     const action = vacationActions.initVacations(vacations);\n//                     dispatch(action);\n//                 })\n//                 .catch(err => alert(err.message));\n//         } else {\n//             alert(\"You are not logged in.\"); // Notify the user that they are not logged in\n//         }\n//     }, [dispatch]);\n\n//     const indexOfLastItem = currentPage * itemsPerPage;\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//     const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n//     const nextPage = () => {\n//         if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     const prevPage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     return (\n//         <div className=\"VacationList\">\n//             <div className=\"vacation-cards-container\">\n//                 {currentVacations.map(vacation => (\n//                     <VacationCards\n//                         key={vacation.id}\n//                         vacation={vacation}\n//                         onToggleLike={() => { }}\n//                     />\n//                 ))}\n//             </div>\n\n//             <div className=\"pagination\">\n//                 <button onClick={prevPage} disabled={currentPage === 1}>Previous</button>\n//                 <span>Page {currentPage}</span>\n//                 <button onClick={nextPage} disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport \"./VacationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VacationList() {\n  _s();\n  const [vacations, setVacations] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(9);\n  const dispatch = useDispatch();\n\n  // Retrieve the token from Redux state\n  const token = useSelector(state => state.auth.token);\n\n  // Fetch vacations when token is available\n  useEffect(() => {\n    if (token) {\n      console.log(\"Fetching vacations with token:\", token); // Debugging log\n      // If the token exists, proceed with the API call\n      vacationsService.getAllVacations().then(vacations => {\n        console.log(\"Fetched vacations:\", vacations); // Debugging log\n        setVacations(vacations);\n        const action = vacationActions.initVacations(vacations);\n        dispatch(action);\n      }).catch(err => {\n        console.error(\"Error fetching vacations:\", err); // Debugging log\n        alert(err.message);\n      });\n    } else {\n      console.warn(\"User is not logged in.\"); // Debugging log\n      alert(\"You are not logged in.\");\n    }\n  }, [dispatch, token]); // Add token as a dependency\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VacationList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacation-cards-container\",\n      children: currentVacations.length > 0 ? currentVacations.map(vacation => /*#__PURE__*/_jsxDEV(VacationCards, {\n        vacation: vacation,\n        onToggleLike: () => {}\n      }, vacation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No vacations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(vacations.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(VacationList, \"TUbnL39oWd2r4C3yQJuQ9nIdHIQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = VacationList;\nvar _c;\n$RefreshReg$(_c, \"VacationList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","vacationActions","vacationsService","VacationCards","jsxDEV","_jsxDEV","VacationList","_s","vacations","setVacations","currentPage","setCurrentPage","itemsPerPage","dispatch","token","state","auth","console","log","getAllVacations","then","action","initVacations","catch","err","error","alert","message","warn","indexOfLastItem","indexOfFirstItem","currentVacations","slice","nextPage","Math","ceil","length","prevPage","className","children","map","vacation","onToggleLike","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/02092024ProjectVacation/Frontend/src/Components/VacationArea/VacationList/VacationList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { VacationModel } from \"../../../Models/VacationModel\";\n// import { vacationActions } from \"../../../Redux/store\";\n// import { vacationsService } from \"../../../Services/VacationsService\";\n// import { VacationCards } from \"../VacationCards/VacationCards\";\n// import \"./VacationList.css\";\n// import axios from \"axios\";\n\n// export function VacationList(): JSX.Element {\n//     const [vacations, setVacations] = useState<VacationModel[]>([]);\n//     const [currentPage, setCurrentPage] = useState<number>(1);\n//     const [itemsPerPage] = useState<number>(9);\n//     const dispatch = useDispatch();\n\n//     // Set token in the header for all axios requests\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\"); // Get the token from local storage\n//         if (token) {\n//             axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in the headers\n//         }\n\n//         // Fetch vacations only if the token exists\n//         if (token) {\n//             vacationsService.getAllVacations()\n//                 .then(vacations => {\n//                     setVacations(vacations);\n//                     const action = vacationActions.initVacations(vacations);\n//                     dispatch(action);\n//                 })\n//                 .catch(err => alert(err.message));\n//         } else {\n//             alert(\"You are not logged in.\"); // Notify the user that they are not logged in\n//         }\n//     }, [dispatch]);\n\n//     const indexOfLastItem = currentPage * itemsPerPage;\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//     const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n//     const nextPage = () => {\n//         if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     const prevPage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     return (\n//         <div className=\"VacationList\">\n//             <div className=\"vacation-cards-container\">\n//                 {currentVacations.map(vacation => (\n//                     <VacationCards\n//                         key={vacation.id}\n//                         vacation={vacation}\n//                         onToggleLike={() => { }}\n//                     />\n//                 ))}\n//             </div>\n\n//             <div className=\"pagination\">\n//                 <button onClick={prevPage} disabled={currentPage === 1}>Previous</button>\n//                 <span>Page {currentPage}</span>\n//                 <button onClick={nextPage} disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../Redux/store\";\nimport { VacationModel } from \"../../../Models/VacationModel\";\nimport { vacationActions } from \"../../../Redux/store\";\nimport { vacationsService } from \"../../../Services/VacationsService\";\nimport { VacationCards } from \"../VacationCards/VacationCards\";\nimport \"./VacationList.css\";\n\nexport function VacationList(): JSX.Element {\n  const [vacations, setVacations] = useState<VacationModel[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage] = useState<number>(9);\n  const dispatch = useDispatch();\n\n  // Retrieve the token from Redux state\n  const token = useSelector((state: AppState) => state.auth.token);\n\n  // Fetch vacations when token is available\n  useEffect(() => {\n    if (token) {\n      console.log(\"Fetching vacations with token:\", token); // Debugging log\n      // If the token exists, proceed with the API call\n      vacationsService\n        .getAllVacations()\n        .then((vacations) => {\n          console.log(\"Fetched vacations:\", vacations); // Debugging log\n          setVacations(vacations);\n          const action = vacationActions.initVacations(vacations);\n          dispatch(action);\n        })\n        .catch((err) => {\n          console.error(\"Error fetching vacations:\", err); // Debugging log\n          alert(err.message);\n        });\n    } else {\n      console.warn(\"User is not logged in.\"); // Debugging log\n      alert(\"You are not logged in.\");\n    }\n  }, [dispatch, token]); // Add token as a dependency\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentVacations = vacations.slice(indexOfFirstItem, indexOfLastItem);\n\n  const nextPage = () => {\n    if (currentPage < Math.ceil(vacations.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div className=\"VacationList\">\n      <div className=\"vacation-cards-container\">\n        {currentVacations.length > 0 ? (\n          currentVacations.map((vacation) => (\n            <VacationCards\n              key={vacation.id}\n              vacation={vacation}\n              onToggleLike={() => {}}\n            />\n          ))\n        ) : (\n          <p>No vacations available</p>\n        )}\n      </div>\n\n      <div className=\"pagination\">\n        <button onClick={prevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span>Page {currentPage}</span>\n        <button\n          onClick={nextPage}\n          disabled={currentPage === Math.ceil(vacations.length / itemsPerPage)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}